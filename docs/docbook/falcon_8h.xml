<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_falcon_8h" xml:lang="en-US">
<title>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/falcon.h File Reference</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/falcon.h</primary></indexterm>
<para>

<para>Contains the primary public api for the Falcon asymmetric signature scheme implementation. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;common.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_falcon_8h_1adf7407d45b4967a666e0339a926dc361"/>#define <emphasis role="strong">QSC_FALCON_ALGNAME</emphasis>&#160;&#160;&#160;&quot;FALCON&quot;</para>

<para>The formal algorithm name. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>QSC_EXPORT_API void <link linkend="_falcon_8h_1ad50c9f6d57a616047858b4e0d31f93b2">qsc_falcon_generate_keypair</link> (uint8_t *publickey, uint8_t *privatekey, bool(*rng_generate)(uint8_t *, size_t))</para>

<para>Generates a Falcon public/private key-pair. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_falcon_8h_1a37ede4bfd3a066d853f9d5cfb991ac41">qsc_falcon_sign</link> (uint8_t *signedmsg, size_t *smsglen, const uint8_t *message, size_t msglen, const uint8_t *privatekey, bool(*rng_generate)(uint8_t *, size_t))</para>

<para>Takes the message as input and returns an array containing the signature followed by the message. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API bool <link linkend="_falcon_8h_1a7d609dba718823e9ba023ca62864ce91">qsc_falcon_verify</link> (uint8_t *message, size_t *msglen, const uint8_t *signedmsg, size_t smsglen, const uint8_t *publickey)</para>

<para>Verifies a signature-message pair with the public key. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Contains the primary public api for the Falcon asymmetric signature scheme implementation. </para>

<para><formalpara>
<title>Example</title>
<para><literallayout><computeroutput><emphasis role="comment">//&#32;An&#32;example&#32;of&#32;key-pair&#32;creation,&#32;encryption,&#32;and&#32;decryption</emphasis>
<emphasis role="preprocessor">#define&#32;MSGLEN&#32;32</emphasis>
uint8_t&#32;pk[QSC_FALCON_PUBLICKEY_SIZE];
uint8_t&#32;sk[QSC_FALCON_SECRETKEY_SIZE];
uint8_t&#32;msg[32];
uint8_t&#32;smsg[QSC_FALCON_SIGNATURE_SIZE&#32;+&#32;MSGLEN];
uint8_t&#32;rmsg[32];

uint32_t&#32;rmsglen&#32;=&#32;0;
uint32_t&#32;smsglen&#32;=&#32;0;

<emphasis role="comment">//&#32;create&#32;the&#32;public&#32;and&#32;secret&#32;keys</emphasis>
qsc_falcon_generate(pk,&#32;sk);
<emphasis role="comment">//&#32;returns&#32;the&#32;signed&#32;the&#32;message&#32;in&#32;smsg</emphasis>
qsc_falcon_sign(smsg,&#32;&amp;smsglen,&#32;msg,&#32;MSGLEN,&#32;sk);
<emphasis role="comment">//&#32;test&#32;the&#32;signature&#32;and&#32;return&#32;the&#32;message&#32;bytes&#32;in&#32;rmsg</emphasis>
<emphasis role="keywordflow">if</emphasis>&#32;(qsc_falcon_verify(rmsg,&#32;&amp;rmsglen,&#32;smsg,&#32;smsglen,&#32;pk)&#32;!=&#32;<emphasis role="keyword">true</emphasis>)
{
&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;authentication&#32;failed,&#32;do&#32;something..</emphasis>
}
</computeroutput></literallayout></para>
</formalpara>
Based entirely on the C reference branch of Falcon taken from the NIST Post Quantum Competition Round 3 submission. <?linebreak?>The NIST Post Quantum Competition <link xlink:href="https://csrc.nist.gov/Projects/post-quantum-cryptography/round-3-submissions">Round 3</link> Finalists. <?linebreak?>The <link xlink:href="https://falcon-sign.info/">Falcon</link> website. <?linebreak?>The Falcon <link xlink:href="https://falcon-sign.info/falcon.pdf">Algorithm</link> Specification. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_falcon_8h_1ad50c9f6d57a616047858b4e0d31f93b2"/><section>
    <title>qsc_falcon_generate_keypair()</title>
<indexterm><primary>qsc_falcon_generate_keypair</primary><secondary>falcon.h</secondary></indexterm>
<indexterm><primary>falcon.h</primary><secondary>qsc_falcon_generate_keypair</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_falcon_generate_keypair (uint8_t * publickey, uint8_t * privatekey, bool(* rng_generate&#160;)(uint8_t *, size_t))</computeroutput></para><para>

<para>Generates a Falcon public/private key-pair. </para>
</para>

<para><warning><title>Warning</title>

<para>Arrays must be sized to QSC_FALCON_PUBLICKEY_SIZE and QSC_FALCON_SECRETKEY_SIZE.</para>
</warning>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>publickey</entry><entry>
<para>Pointer to the public verification-key array </para>
</entry>
                            </row>
                            <row>
<entry>privatekey</entry><entry>
<para>Pointer to the private signature-key array </para>
</entry>
                            </row>
                            <row>
<entry>rng_generate</entry><entry>
<para>Pointer to the random generator </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_falcon_8h_1a37ede4bfd3a066d853f9d5cfb991ac41"/><section>
    <title>qsc_falcon_sign()</title>
<indexterm><primary>qsc_falcon_sign</primary><secondary>falcon.h</secondary></indexterm>
<indexterm><primary>falcon.h</primary><secondary>qsc_falcon_sign</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_falcon_sign (uint8_t * signedmsg, size_t * smsglen, const uint8_t * message, size_t msglen, const uint8_t * privatekey, bool(* rng_generate&#160;)(uint8_t *, size_t))</computeroutput></para><para>

<para>Takes the message as input and returns an array containing the signature followed by the message. </para>
</para>

<para><warning><title>Warning</title>

<para>Signature array must be sized to the size of the message plus QSC_FALCON_SIGNATURE_SIZE.</para>
</warning>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>signedmsg</entry><entry>
<para>Pointer to the signed-message array </para>
</entry>
                            </row>
                            <row>
<entry>smsglen</entry><entry>
<para>The signed message length </para>
</entry>
                            </row>
                            <row>
<entry>message</entry><entry>
<para>[const] Pointer to the message array </para>
</entry>
                            </row>
                            <row>
<entry>msglen</entry><entry>
<para>The message array length </para>
</entry>
                            </row>
                            <row>
<entry>privatekey</entry><entry>
<para>[const] Pointer to the private signature-key </para>
</entry>
                            </row>
                            <row>
<entry>rng_generate</entry><entry>
<para>Pointer to the random generator </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_falcon_8h_1a7d609dba718823e9ba023ca62864ce91"/><section>
    <title>qsc_falcon_verify()</title>
<indexterm><primary>qsc_falcon_verify</primary><secondary>falcon.h</secondary></indexterm>
<indexterm><primary>falcon.h</primary><secondary>qsc_falcon_verify</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API bool qsc_falcon_verify (uint8_t * message, size_t * msglen, const uint8_t * signedmsg, size_t smsglen, const uint8_t * publickey)</computeroutput></para><para>

<para>Verifies a signature-message pair with the public key. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>message</entry><entry>
<para>Pointer to the message output array </para>
</entry>
                            </row>
                            <row>
<entry>msglen</entry><entry>
<para>Length of the message array </para>
</entry>
                            </row>
                            <row>
<entry>signedmsg</entry><entry>
<para>[const] Pointer to the signed message array </para>
</entry>
                            </row>
                            <row>
<entry>smsglen</entry><entry>
<para>The signed message length </para>
</entry>
                            </row>
                            <row>
<entry>publickey</entry><entry>
<para>[const] Pointer to the public verification-key array </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns true for success </para>
</formalpara>
</para>
</section>
</section>
</section>
