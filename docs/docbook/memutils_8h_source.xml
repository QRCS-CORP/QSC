<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_memutils_8h_source" xml:lang="en-US">
<title>memutils.h</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/memutils.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;2025&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation</emphasis>
2 <emphasis role="comment">&#32;*&#32;All&#32;Rights&#32;Reserved.</emphasis>
3 <emphasis role="comment">&#32;*</emphasis>
4 <emphasis role="comment">&#32;*&#32;NOTICE:&#32;This&#32;software&#32;and&#32;all&#32;accompanying&#32;materials&#32;are&#32;the&#32;exclusive&#32;</emphasis>
5 <emphasis role="comment">&#32;*&#32;property&#32;of&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation&#32;(QRCS).</emphasis>
6 <emphasis role="comment">&#32;*&#32;The&#32;intellectual&#32;and&#32;technical&#32;concepts&#32;contained&#32;within&#32;this&#32;implementation&#32;</emphasis>
7 <emphasis role="comment">&#32;*&#32;are&#32;proprietary&#32;to&#32;QRCS&#32;and&#32;its&#32;authorized&#32;licensors&#32;and&#32;are&#32;protected&#32;under&#32;</emphasis>
8 <emphasis role="comment">&#32;*&#32;applicable&#32;U.S.&#32;and&#32;international&#32;copyright,&#32;patent,&#32;and&#32;trade&#32;secret&#32;laws.</emphasis>
9 <emphasis role="comment">&#32;*</emphasis>
10 <emphasis role="comment">&#32;*&#32;CRYPTOGRAPHIC&#32;STANDARDS:</emphasis>
11 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;includes&#32;implementations&#32;of&#32;cryptographic&#32;algorithms&#32;such&#32;as&#32;</emphasis>
12 <emphasis role="comment">&#32;*&#32;&#32;&#32;SHA3,&#32;AES,&#32;and&#32;others.&#32;These&#32;algorithms&#32;are&#32;public&#32;domain&#32;or&#32;standardized&#32;</emphasis>
13 <emphasis role="comment">&#32;*&#32;&#32;&#32;by&#32;organizations&#32;such&#32;as&#32;NIST&#32;and&#32;are&#32;NOT&#32;the&#32;property&#32;of&#32;QRCS.</emphasis>
14 <emphasis role="comment">&#32;*&#32;-&#32;However,&#32;all&#32;source&#32;code,&#32;optimizations,&#32;and&#32;implementations&#32;in&#32;this&#32;library&#32;</emphasis>
15 <emphasis role="comment">&#32;*&#32;&#32;&#32;are&#32;original&#32;works&#32;of&#32;QRCS&#32;and&#32;are&#32;protected&#32;under&#32;this&#32;license.</emphasis>
16 <emphasis role="comment">&#32;*</emphasis>
17 <emphasis role="comment">&#32;*&#32;RESTRICTIONS:</emphasis>
18 <emphasis role="comment">&#32;*&#32;-&#32;Redistribution,&#32;modification,&#32;or&#32;unauthorized&#32;distribution&#32;of&#32;this&#32;software,&#32;</emphasis>
19 <emphasis role="comment">&#32;*&#32;&#32;&#32;in&#32;whole&#32;or&#32;in&#32;part,&#32;is&#32;strictly&#32;prohibited.</emphasis>
20 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;is&#32;provided&#32;for&#32;non-commercial,&#32;educational,&#32;and&#32;research&#32;</emphasis>
21 <emphasis role="comment">&#32;*&#32;&#32;&#32;purposes&#32;only.&#32;Commercial&#32;use&#32;in&#32;any&#32;form&#32;is&#32;expressly&#32;forbidden.</emphasis>
22 <emphasis role="comment">&#32;*&#32;-&#32;Licensing&#32;and&#32;authorized&#32;distribution&#32;are&#32;solely&#32;at&#32;the&#32;discretion&#32;of&#32;QRCS.</emphasis>
23 <emphasis role="comment">&#32;*&#32;-&#32;Any&#32;use&#32;of&#32;this&#32;software&#32;implies&#32;acceptance&#32;of&#32;these&#32;restrictions.</emphasis>
24 <emphasis role="comment">&#32;*</emphasis>
25 <emphasis role="comment">&#32;*&#32;DISCLAIMER:</emphasis>
26 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;provided&#32;&quot;as&#32;is,&quot;&#32;without&#32;warranty&#32;of&#32;any&#32;kind,&#32;express&#32;or&#32;</emphasis>
27 <emphasis role="comment">&#32;*&#32;implied,&#32;including&#32;but&#32;not&#32;limited&#32;to&#32;warranties&#32;of&#32;merchantability&#32;or&#32;fitness&#32;</emphasis>
28 <emphasis role="comment">&#32;*&#32;for&#32;a&#32;particular&#32;purpose.&#32;QRCS&#32;disclaims&#32;all&#32;liability&#32;for&#32;any&#32;direct,&#32;indirect,&#32;</emphasis>
29 <emphasis role="comment">&#32;*&#32;incidental,&#32;or&#32;consequential&#32;damages&#32;resulting&#32;from&#32;the&#32;use&#32;or&#32;misuse&#32;of&#32;this&#32;software.</emphasis>
30 <emphasis role="comment">&#32;*</emphasis>
31 <emphasis role="comment">&#32;*&#32;FULL&#32;LICENSE:</emphasis>
32 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;subject&#32;to&#32;the&#32;**Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;</emphasis>
33 <emphasis role="comment">&#32;*&#32;Proprietary&#32;License&#32;(QRCS-PL)**.&#32;The&#32;complete&#32;license&#32;terms&#32;are&#32;included&#32;</emphasis>
34 <emphasis role="comment">&#32;*&#32;in&#32;the&#32;LICENSE.txt&#32;file&#32;distributed&#32;with&#32;this&#32;software.</emphasis>
35 <emphasis role="comment">&#32;*</emphasis>
36 <emphasis role="comment">&#32;*&#32;Written&#32;by:&#32;John&#32;G.&#32;Underhill</emphasis>
37 <emphasis role="comment">&#32;*&#32;Contact:&#32;john.underhill@protonmail.com</emphasis>
38 <emphasis role="comment">&#32;*/</emphasis>
39 
40 
41 <emphasis role="preprocessor">#ifndef&#32;QSC_MEMUTILS_H</emphasis>
42 <emphasis role="preprocessor">#define&#32;QSC_MEMUTILS_H</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">common.h</link>&quot;</emphasis>
45 
46 <emphasis role="comment">/*</emphasis>
47 <emphasis role="comment">*&#32;\file&#32;memutils.h</emphasis>
48 <emphasis role="comment">*&#32;\brief&#32;Contains&#32;common&#32;memory&#32;related&#32;functions&#32;implemented&#32;using&#32;SIMD&#32;instructions</emphasis>
49 <emphasis role="comment">*/</emphasis>
50 
55 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_COMPILER_MSC)</emphasis>
56 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;intrin.h&gt;</emphasis>
57 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;QSC_MEMUTILS_MEMORY_FENCE()&#32;_ReadWriteBarrier()</emphasis>
58 <emphasis role="preprocessor">#&#32;&#32;&#32;elif&#32;defined(QSC_SYSTEM_COMPILER_GCC)</emphasis>
59 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;QSC_MEMUTILS_MEMORY_FENCE()&#32;__asm__&#32;__volatile__&#32;(&quot;&quot;&#32;:::&#32;&quot;memory&quot;)</emphasis>
60 <emphasis role="preprocessor">#&#32;&#32;&#32;else</emphasis>
61 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;QSC_MEMUTILS_MEMORY_FENCE()</emphasis>
62 <emphasis role="preprocessor">#endif</emphasis>
63 
68 <emphasis role="preprocessor">#define&#32;QSC_MEMUTILS_CACHE_LINE_SIZE&#32;64</emphasis>
69 
74 <emphasis role="preprocessor">#define&#32;QSC_MEMUTILS_MEMORY_PAGE_SIZE&#32;4096</emphasis>
75 
81 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_flush_cache_line(<emphasis role="keywordtype">void</emphasis>&#32;*address);
82 
89 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_prefetch_l1(uint8_t*&#32;address,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
90 
97 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_prefetch_l2(uint8_t*&#32;address,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
98 
105 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_prefetch_l3(uint8_t*&#32;address,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
106 
114 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>*&#32;qsc_memutils_malloc(<emphasis role="keywordtype">size_t</emphasis>&#32;length);
115 
123 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>*&#32;qsc_memutils_realloc(<emphasis role="keywordtype">void</emphasis>*&#32;block,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
124 
130 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_alloc_free(<emphasis role="keywordtype">void</emphasis>*&#32;block);
131 
140 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>*&#32;qsc_memutils_aligned_alloc(int32_t&#32;align,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
141 
150 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>*&#32;qsc_memutils_aligned_realloc(<emphasis role="keywordtype">void</emphasis>*&#32;block,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
151 
157 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_aligned_free(<emphasis role="keywordtype">void</emphasis>*&#32;block);
158 
165 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_clear(<emphasis role="keywordtype">void</emphasis>*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
166 
175 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_array_uniform(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
176 
186 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_are_equal(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
187 
196 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_are_equal_128(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
197 
206 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_are_equal_256(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
207 
216 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_are_equal_512(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
217 
225 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_copy(<emphasis role="keywordtype">void</emphasis>*&#32;output,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
226 
237 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_clmulepi64_si128(uint64_t&#32;r[2],&#32;<emphasis role="keyword">const</emphasis>&#32;uint64_t&#32;a[2],&#32;<emphasis role="keyword">const</emphasis>&#32;uint64_t&#32;b[2],&#32;<emphasis role="keywordtype">int</emphasis>&#32;imm8);
238 
249 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_clmulepi64_si256_avx(__m128i&#32;r[4],&#32;<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;a[2],&#32;<emphasis role="keyword">const</emphasis>&#32;__m128i&#32;b[2]);
250 
261 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_clmulepi64_si256(uint64_t&#32;r[8],&#32;<emphasis role="keyword">const</emphasis>&#32;uint64_t&#32;a[4],&#32;<emphasis role="keyword">const</emphasis>&#32;uint64_t&#32;b[4]);
262 
271 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_greater_than_be128(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
272 
281 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_greater_than_be256(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
282 
291 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_greater_than_be512(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
292 
301 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_greater_than_le128(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
302 
311 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_greater_than_le256(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
312 
321 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_greater_than_le512(<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;b);
322 
330 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_move(<emphasis role="keywordtype">void</emphasis>*&#32;output,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
331 
338 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_secure_erase(<emphasis role="keywordtype">void</emphasis>*&#32;block,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
339 
346 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_secure_free(<emphasis role="keywordtype">void</emphasis>*&#32;block,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
347 
356 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>*&#32;qsc_memutils_secure_malloc(<emphasis role="keywordtype">size_t</emphasis>&#32;length);
357 
365 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_set_value(<emphasis role="keywordtype">void</emphasis>*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length,&#32;uint8_t&#32;value);
366 
374 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_xor(uint8_t*&#32;output,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
375 
383 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_memutils_xorv(uint8_t*&#32;output,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;value,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
384 
393 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_memutils_zeroed(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;length);
394 
395 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
