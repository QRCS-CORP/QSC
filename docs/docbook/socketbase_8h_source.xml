<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_socketbase_8h_source" xml:lang="en-US">
<title>socketbase.h</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/socketbase.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;2025&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation</emphasis>
2 <emphasis role="comment">&#32;*&#32;All&#32;Rights&#32;Reserved.</emphasis>
3 <emphasis role="comment">&#32;*</emphasis>
4 <emphasis role="comment">&#32;*&#32;NOTICE:&#32;This&#32;software&#32;and&#32;all&#32;accompanying&#32;materials&#32;are&#32;the&#32;exclusive&#32;</emphasis>
5 <emphasis role="comment">&#32;*&#32;property&#32;of&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation&#32;(QRCS).</emphasis>
6 <emphasis role="comment">&#32;*&#32;The&#32;intellectual&#32;and&#32;technical&#32;concepts&#32;contained&#32;within&#32;this&#32;implementation&#32;</emphasis>
7 <emphasis role="comment">&#32;*&#32;are&#32;proprietary&#32;to&#32;QRCS&#32;and&#32;its&#32;authorized&#32;licensors&#32;and&#32;are&#32;protected&#32;under&#32;</emphasis>
8 <emphasis role="comment">&#32;*&#32;applicable&#32;U.S.&#32;and&#32;international&#32;copyright,&#32;patent,&#32;and&#32;trade&#32;secret&#32;laws.</emphasis>
9 <emphasis role="comment">&#32;*</emphasis>
10 <emphasis role="comment">&#32;*&#32;CRYPTOGRAPHIC&#32;STANDARDS:</emphasis>
11 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;includes&#32;implementations&#32;of&#32;cryptographic&#32;algorithms&#32;such&#32;as&#32;</emphasis>
12 <emphasis role="comment">&#32;*&#32;&#32;&#32;SHA3,&#32;AES,&#32;and&#32;others.&#32;These&#32;algorithms&#32;are&#32;public&#32;domain&#32;or&#32;standardized&#32;</emphasis>
13 <emphasis role="comment">&#32;*&#32;&#32;&#32;by&#32;organizations&#32;such&#32;as&#32;NIST&#32;and&#32;are&#32;NOT&#32;the&#32;property&#32;of&#32;QRCS.</emphasis>
14 <emphasis role="comment">&#32;*&#32;-&#32;However,&#32;all&#32;source&#32;code,&#32;optimizations,&#32;and&#32;implementations&#32;in&#32;this&#32;library&#32;</emphasis>
15 <emphasis role="comment">&#32;*&#32;&#32;&#32;are&#32;original&#32;works&#32;of&#32;QRCS&#32;and&#32;are&#32;protected&#32;under&#32;this&#32;license.</emphasis>
16 <emphasis role="comment">&#32;*</emphasis>
17 <emphasis role="comment">&#32;*&#32;RESTRICTIONS:</emphasis>
18 <emphasis role="comment">&#32;*&#32;-&#32;Redistribution,&#32;modification,&#32;or&#32;unauthorized&#32;distribution&#32;of&#32;this&#32;software,&#32;</emphasis>
19 <emphasis role="comment">&#32;*&#32;&#32;&#32;in&#32;whole&#32;or&#32;in&#32;part,&#32;is&#32;strictly&#32;prohibited.</emphasis>
20 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;is&#32;provided&#32;for&#32;non-commercial,&#32;educational,&#32;and&#32;research&#32;</emphasis>
21 <emphasis role="comment">&#32;*&#32;&#32;&#32;purposes&#32;only.&#32;Commercial&#32;use&#32;in&#32;any&#32;form&#32;is&#32;expressly&#32;forbidden.</emphasis>
22 <emphasis role="comment">&#32;*&#32;-&#32;Licensing&#32;and&#32;authorized&#32;distribution&#32;are&#32;solely&#32;at&#32;the&#32;discretion&#32;of&#32;QRCS.</emphasis>
23 <emphasis role="comment">&#32;*&#32;-&#32;Any&#32;use&#32;of&#32;this&#32;software&#32;implies&#32;acceptance&#32;of&#32;these&#32;restrictions.</emphasis>
24 <emphasis role="comment">&#32;*</emphasis>
25 <emphasis role="comment">&#32;*&#32;DISCLAIMER:</emphasis>
26 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;provided&#32;&quot;as&#32;is,&quot;&#32;without&#32;warranty&#32;of&#32;any&#32;kind,&#32;express&#32;or&#32;</emphasis>
27 <emphasis role="comment">&#32;*&#32;implied,&#32;including&#32;but&#32;not&#32;limited&#32;to&#32;warranties&#32;of&#32;merchantability&#32;or&#32;fitness&#32;</emphasis>
28 <emphasis role="comment">&#32;*&#32;for&#32;a&#32;particular&#32;purpose.&#32;QRCS&#32;disclaims&#32;all&#32;liability&#32;for&#32;any&#32;direct,&#32;indirect,&#32;</emphasis>
29 <emphasis role="comment">&#32;*&#32;incidental,&#32;or&#32;consequential&#32;damages&#32;resulting&#32;from&#32;the&#32;use&#32;or&#32;misuse&#32;of&#32;this&#32;software.</emphasis>
30 <emphasis role="comment">&#32;*</emphasis>
31 <emphasis role="comment">&#32;*&#32;FULL&#32;LICENSE:</emphasis>
32 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;subject&#32;to&#32;the&#32;**Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;</emphasis>
33 <emphasis role="comment">&#32;*&#32;Proprietary&#32;License&#32;(QRCS-PL)**.&#32;The&#32;complete&#32;license&#32;terms&#32;are&#32;included&#32;</emphasis>
34 <emphasis role="comment">&#32;*&#32;in&#32;the&#32;LICENSE.txt&#32;file&#32;distributed&#32;with&#32;this&#32;software.</emphasis>
35 <emphasis role="comment">&#32;*</emphasis>
36 <emphasis role="comment">&#32;*&#32;Written&#32;by:&#32;John&#32;G.&#32;Underhill</emphasis>
37 <emphasis role="comment">&#32;*&#32;Contact:&#32;john.underhill@protonmail.com</emphasis>
38 <emphasis role="comment">&#32;*/</emphasis>
39 
40 
41 <emphasis role="preprocessor">#ifndef&#32;QSC_SOCKETBASE_H</emphasis>
42 <emphasis role="preprocessor">#define&#32;QSC_SOCKETBASE_H</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">common.h</link>&quot;</emphasis>
45 <emphasis role="preprocessor">#include&#32;&quot;intutils.h&quot;</emphasis>
46 <emphasis role="preprocessor">#include&#32;&quot;ipinfo.h&quot;</emphasis>
47 <emphasis role="preprocessor">#include&#32;&quot;memutils.h&quot;</emphasis>
48 <emphasis role="preprocessor">#include&#32;&quot;socket.h&quot;</emphasis>
49 
50 <emphasis role="comment">/*</emphasis>
51 <emphasis role="comment">*&#32;\file&#32;socketbase.h</emphasis>
52 <emphasis role="comment">*&#32;\brief&#32;Time-stamp&#32;function&#32;definitions</emphasis>
53 <emphasis role="comment">*/</emphasis>
54 
55 <emphasis role="comment">/*&#32;bogus&#32;winbase.h&#32;error&#32;*/</emphasis>
56 QSC_SYSTEM_CONDITION_IGNORE(5105)
57 
58 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_OS_WINDOWS)</emphasis>
59 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;WinSock2.h&gt;</emphasis>
60 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;WS2tcpip.h&gt;</emphasis>
61 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;ws2def.h&gt;</emphasis>
62 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;objbase.h&gt;</emphasis>
63 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;inaddr.h&gt;</emphasis>
64 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;iphlpapi.h&gt;</emphasis>
65 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;defined(QSC_SYSTEM_COMPILER_MSC)&#32;&amp;&amp;&#32;defined(QSC_SYSTEM_MAX_PATH)</emphasis>
66 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;comment(lib,&#32;&quot;iphlpapi.lib&quot;)</emphasis>
67 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;pragma&#32;comment(lib,&#32;&quot;ws2_32.lib&quot;)</emphasis>
68 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
69 <emphasis role="preprocessor">#elif&#32;defined(QSC_SYSTEM_OS_POSIX)</emphasis>
70 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;errno.h&gt;</emphasis>
71 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;netdb.h&gt;</emphasis>
72 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;ifaddrs.h&gt;</emphasis>
73 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;netinet/in.h&gt;</emphasis>
74 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;arpa/inet.h&gt;</emphasis>
75 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;sys/select.h&gt;</emphasis>
76 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;sys/socket.h&gt;</emphasis>
77 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;string.h&gt;</emphasis>
78 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;sys/types.h&gt;</emphasis>
79 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;sys/un.h&gt;</emphasis>
80 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&lt;unistd.h&gt;</emphasis>
81 <emphasis role="preprocessor">#&#32;&#32;&#32;if&#32;defined(QSC_SYSTEM_OS_LINUX)</emphasis>
82 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;include&#32;&lt;netpacket/packet.h&gt;</emphasis>
83 <emphasis role="preprocessor">#&#32;&#32;&#32;elif&#32;defined(QSC_SYSTEM_OS_APPLE)</emphasis>
84 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;include&#32;&lt;net/if_dl.h&gt;</emphasis>
85 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;include&#32;&lt;netinet/in.h&gt;</emphasis>
86 <emphasis role="comment">//#&#32;&#32;&#32;&#32;&#32;include&#32;&lt;netinet/in6.h&gt;</emphasis>
87 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;!defined(AF_PACKET)</emphasis>
88 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;define&#32;AF_PACKET&#32;PF_INET</emphasis>
89 <emphasis role="preprocessor">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;endif</emphasis>
90 <emphasis role="preprocessor">#&#32;&#32;&#32;elif&#32;defined(QSC_SYSTEM_OS_UNIX)</emphasis>
91 
92 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
93 <emphasis role="comment">//#else</emphasis>
94 <emphasis role="comment">//#&#32;error&#32;&quot;The&#32;operating&#32;system&#32;is&#32;not&#32;supported!&quot;</emphasis>
95 <emphasis role="preprocessor">#endif</emphasis>
96 
98 <emphasis role="comment">//\def&#32;QSC_SOCKET_DUAL_IPV6_STACK</emphasis>
99 <emphasis role="comment">//*&#32;\brief&#32;Enables&#32;a&#32;dual&#32;stack&#32;ipv4&#32;and&#32;ipv6&#32;listener.</emphasis>
100 <emphasis role="comment">//*/</emphasis>
101 <emphasis role="comment">//#if&#32;!defined(QSC_SOCKET_DUAL_IPV6_STACK)</emphasis>
102 <emphasis role="comment">//#&#32;define&#32;QSC_SOCKET_DUAL_IPV6_STACK</emphasis>
103 <emphasis role="comment">//#endif</emphasis>
104 
105 <emphasis role="comment">/***&#32;Function&#32;State&#32;***/</emphasis>
106 
111 <emphasis role="preprocessor">#define&#32;QSC_SOCKET_RECEIVE_BUFFER_SIZE&#32;1600</emphasis>
112 
116 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;qsc_socket_exceptions
117 {
118 &#32;&#32;&#32;&#32;qsc_socket_exception_success&#32;=&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
119 &#32;&#32;&#32;&#32;qsc_socket_exception_error&#32;=&#32;-1,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
120 &#32;&#32;&#32;&#32;qsc_socket_invalid_input&#32;=&#32;-2,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
121 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_OS_WINDOWS)</emphasis>
122 &#32;&#32;&#32;&#32;qsc_socket_exception_address_in_use&#32;=&#32;WSAEADDRINUSE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
123 &#32;&#32;&#32;&#32;qsc_socket_exception_address_required&#32;=&#32;WSAEDESTADDRREQ,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
124 &#32;&#32;&#32;&#32;qsc_socket_exception_address_unsupported&#32;=&#32;WSAEAFNOSUPPORT,&#32;&#32;&#32;&#32;&#32;
125 &#32;&#32;&#32;&#32;qsc_socket_exception_already_in_use&#32;=&#32;WSAEISCONN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
126 &#32;&#32;&#32;&#32;qsc_socket_exception_blocking_cancelled&#32;=&#32;WSAEINTR,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
127 &#32;&#32;&#32;&#32;qsc_socket_exception_blocking_in_progress&#32;=&#32;WSAEINPROGRESS,&#32;&#32;&#32;&#32;&#32;
128 &#32;&#32;&#32;&#32;qsc_socket_exception_broadcast_address&#32;=&#32;WSAEACCES,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
129 &#32;&#32;&#32;&#32;qsc_socket_exception_buffer_fault&#32;=&#32;WSAEFAULT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
130 &#32;&#32;&#32;&#32;qsc_socket_exception_circuit_reset&#32;=&#32;WSAECONNRESET,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
131 &#32;&#32;&#32;&#32;qsc_socket_exception_circuit_terminated&#32;=&#32;WSAECONNABORTED,&#32;&#32;&#32;&#32;&#32;&#32;
132 &#32;&#32;&#32;&#32;qsc_socket_exception_circuit_timeout&#32;=&#32;WSAETIMEDOUT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
133 &#32;&#32;&#32;&#32;qsc_socket_exception_connection_refused&#32;=&#32;WSAECONNREFUSED,&#32;&#32;&#32;&#32;&#32;&#32;
134 &#32;&#32;&#32;&#32;qsc_socket_exception_descriptor_not_socket&#32;=&#32;WSAENOTSOCK,&#32;&#32;&#32;&#32;&#32;&#32;&#32;
135 &#32;&#32;&#32;&#32;qsc_socket_exception_disk_quota_exceeded&#32;=&#32;WSAEDQUOT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
136 &#32;&#32;&#32;&#32;qsc_socket_exception_dropped_connection&#32;=&#32;WSAENETRESET,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
137 &#32;&#32;&#32;&#32;qsc_socket_exception_family_unsupported&#32;=&#32;WSAEPFNOSUPPORT,&#32;&#32;&#32;&#32;&#32;&#32;
138 &#32;&#32;&#32;&#32;qsc_socket_exception_host_is_down&#32;=&#32;WSAEHOSTDOWN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
139 &#32;&#32;&#32;&#32;qsc_socket_exception_host_unreachable&#32;=&#32;WSAEHOSTUNREACH,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
140 &#32;&#32;&#32;&#32;qsc_socket_exception_in_progress&#32;=&#32;WSAEALREADY,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
141 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_address&#32;=&#32;WSAEADDRNOTAVAIL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
142 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_parameter&#32;=&#32;WSA_INVALID_PARAMETER,&#32;
143 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_protocol&#32;=&#32;WSAEPROTOTYPE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
144 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_protocol_option&#32;=&#32;WSAENOPROTOOPT,&#32;&#32;
145 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_provider&#32;=&#32;WSAEINVALIDPROVIDER,&#32;&#32;&#32;&#32;
146 &#32;&#32;&#32;&#32;qsc_socket_exception_item_is_remote&#32;=&#32;WSAEREMOTE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
147 &#32;&#32;&#32;&#32;qsc_socket_exception_message_too_long&#32;=&#32;WSAEMSGSIZE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
148 &#32;&#32;&#32;&#32;qsc_socket_exception_name_too_long&#32;=&#32;WSAENAMETOOLONG,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
149 &#32;&#32;&#32;&#32;qsc_socket_exception_network_failure&#32;=&#32;WSAENETDOWN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
150 &#32;&#32;&#32;&#32;qsc_socket_exception_network_unreachable&#32;=&#32;WSAENETUNREACH,&#32;&#32;&#32;&#32;&#32;&#32;
151 &#32;&#32;&#32;&#32;qsc_socket_exception_no_buffer_space&#32;=&#32;WSAENOBUFS,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
152 &#32;&#32;&#32;&#32;qsc_socket_exception_no_descriptors&#32;=&#32;WSAEMFILE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
153 &#32;&#32;&#32;&#32;qsc_socket_exception_no_memory&#32;=&#32;WSA_NOT_ENOUGH_MEMORY,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
154 &#32;&#32;&#32;&#32;qsc_socket_exception_not_bound&#32;=&#32;WSAEINVAL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
155 &#32;&#32;&#32;&#32;qsc_socket_exception_not_connected&#32;=&#32;WSAENOTCONN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
156 &#32;&#32;&#32;&#32;qsc_socket_exception_not_initialized&#32;=&#32;WSANOTINITIALISED,&#32;&#32;&#32;&#32;&#32;&#32;&#32;
157 &#32;&#32;&#32;&#32;qsc_socket_exception_operation_unsupported&#32;=&#32;WSAEOPNOTSUPP,&#32;&#32;&#32;&#32;&#32;
158 &#32;&#32;&#32;&#32;qsc_socket_exception_protocol_unsupported&#32;=&#32;WSAEPROTONOSUPPORT,&#32;
159 &#32;&#32;&#32;&#32;qsc_socket_exception_shut_down&#32;=&#32;WSAESHUTDOWN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
160 &#32;&#32;&#32;&#32;qsc_socket_exception_socket_unsupported&#32;=&#32;WSAESOCKTNOSUPPORT,&#32;&#32;&#32;
161 &#32;&#32;&#32;&#32;qsc_socket_exception_system_not_ready&#32;=&#32;WSASYSNOTREADY,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
162 &#32;&#32;&#32;&#32;qsc_socket_exception_too_many_processes&#32;=&#32;WSAEPROCLIM,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
163 &#32;&#32;&#32;&#32;qsc_socket_exception_too_many_users&#32;=&#32;WSAEUSERS,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
164 &#32;&#32;&#32;&#32;qsc_socket_exception_translation_failed&#32;=&#32;WSAELOOP,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
165 &#32;&#32;&#32;&#32;qsc_socket_exception_would_block&#32;=&#32;WSAEWOULDBLOCK,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
166 <emphasis role="preprocessor">#else</emphasis>
167 &#32;&#32;&#32;&#32;qsc_socket_exception_address_in_use&#32;=&#32;EADDRINUSE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
168 &#32;&#32;&#32;&#32;qsc_socket_exception_address_required&#32;=&#32;EDESTADDRREQ,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
169 &#32;&#32;&#32;&#32;qsc_socket_exception_address_unsupported&#32;=&#32;EAFNOSUPPORT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
170 &#32;&#32;&#32;&#32;qsc_socket_exception_already_in_use&#32;=&#32;EISCONN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
171 &#32;&#32;&#32;&#32;qsc_socket_exception_blocking_cancelled&#32;=&#32;EINTR,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
172 &#32;&#32;&#32;&#32;qsc_socket_exception_blocking_in_progress&#32;=&#32;EINPROGRESS,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
173 &#32;&#32;&#32;&#32;qsc_socket_exception_broadcast_address&#32;=&#32;EACCES,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
174 &#32;&#32;&#32;&#32;qsc_socket_exception_buffer_fault&#32;=&#32;EFAULT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
175 &#32;&#32;&#32;&#32;qsc_socket_exception_circuit_terminated&#32;=&#32;ECONNABORTED,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
176 &#32;&#32;&#32;&#32;qsc_socket_exception_circuit_reset&#32;=&#32;ECONNRESET,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
177 &#32;&#32;&#32;&#32;qsc_socket_exception_circuit_timeout&#32;=&#32;ETIMEDOUT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
178 &#32;&#32;&#32;&#32;qsc_socket_exception_connection_refused&#32;=&#32;ECONNREFUSED,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
179 &#32;&#32;&#32;&#32;qsc_socket_exception_descriptor_not_socket&#32;=&#32;ENOTSOCK,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
180 &#32;&#32;&#32;&#32;qsc_socket_exception_disk_quota_exceeded&#32;=&#32;EDQUOT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
181 &#32;&#32;&#32;&#32;qsc_socket_exception_dropped_connection&#32;=&#32;ENETRESET,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
182 &#32;&#32;&#32;&#32;qsc_socket_exception_family_unsupported&#32;=&#32;EPFNOSUPPORT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
183 &#32;&#32;&#32;&#32;qsc_socket_exception_host_is_down&#32;=&#32;EHOSTDOWN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
184 &#32;&#32;&#32;&#32;qsc_socket_exception_host_unreachable&#32;=&#32;EHOSTUNREACH,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
185 &#32;&#32;&#32;&#32;qsc_socket_exception_in_progress&#32;=&#32;EALREADY,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
186 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_address&#32;=&#32;EADDRNOTAVAIL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
187 &#32;&#32;&#32;&#32;<emphasis role="comment">//qsc_socket_exception_invalid_parameter&#32;=&#32;EOTHER,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/*!&lt;&#32;One&#32;or&#32;more&#32;parameters&#32;are&#32;invalid&#32;*/</emphasis>
188 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_protocol&#32;=&#32;EPROTOTYPE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
189 &#32;&#32;&#32;&#32;qsc_socket_exception_invalid_protocol_option&#32;=&#32;ENOPROTOOPT,&#32;&#32;&#32;&#32;&#32;
190 &#32;&#32;&#32;&#32;<emphasis role="comment">//qsc_socket_exception_invalid_provider&#32;=&#32;EINVALIDPROVIDER,&#32;&#32;&#32;&#32;&#32;/*!&lt;&#32;The&#32;service&#32;provider&#32;is&#32;invalid&#32;*/</emphasis>
191 &#32;&#32;&#32;&#32;qsc_socket_exception_item_is_remote&#32;=&#32;EREMOTE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
192 &#32;&#32;&#32;&#32;qsc_socket_exception_message_too_long&#32;=&#32;EMSGSIZE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
193 &#32;&#32;&#32;&#32;qsc_socket_exception_name_too_long&#32;=&#32;ENAMETOOLONG,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
194 &#32;&#32;&#32;&#32;qsc_socket_exception_network_failure&#32;=&#32;ENETDOWN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
195 &#32;&#32;&#32;&#32;qsc_socket_exception_network_unreachable&#32;=&#32;ENETUNREACH,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
196 &#32;&#32;&#32;&#32;qsc_socket_exception_no_buffer_space&#32;=&#32;ENOBUFS,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
197 &#32;&#32;&#32;&#32;qsc_socket_exception_no_descriptors&#32;=&#32;EMFILE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
198 &#32;&#32;&#32;&#32;qsc_socket_exception_not_bound&#32;=&#32;EINVAL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
199 &#32;&#32;&#32;&#32;qsc_socket_exception_not_connected&#32;=&#32;ENOTCONN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
200 &#32;&#32;&#32;&#32;qsc_socket_exception_operation_unsupported&#32;=&#32;EOPNOTSUPP,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
201 &#32;&#32;&#32;&#32;qsc_socket_exception_protocol_unsupported&#32;=&#32;EPROTONOSUPPORT,&#32;&#32;&#32;&#32;
202 &#32;&#32;&#32;&#32;qsc_socket_exception_socket_unsupported&#32;=&#32;ESOCKTNOSUPPORT,&#32;&#32;&#32;&#32;&#32;&#32;
203 &#32;&#32;&#32;&#32;qsc_socket_exception_shut_down&#32;=&#32;ESHUTDOWN,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
204 &#32;&#32;&#32;&#32;qsc_socket_exception_system_not_ready&#32;=&#32;ETXTBSY,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
205 &#32;&#32;&#32;&#32;<emphasis role="comment">//qsc_socket_exception_too_many_processes&#32;=&#32;EPROCLIM,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/*!&lt;&#32;The&#32;host&#32;is&#32;using&#32;too&#32;many&#32;processes&#32;*/</emphasis>
206 &#32;&#32;&#32;&#32;qsc_socket_exception_too_many_users&#32;=&#32;EUSERS,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
207 &#32;&#32;&#32;&#32;qsc_socket_exception_translation_failed&#32;=&#32;ELOOP,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
208 &#32;&#32;&#32;&#32;qsc_socket_exception_would_block&#32;=&#32;EWOULDBLOCK,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
209 
210 <emphasis role="preprocessor">#endif</emphasis>
211 }&#32;qsc_socket_exceptions;
212 
216 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;QSC_SOCKET_ERROR_STRINGS[48][128]&#32;=
217 {
218 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;SUCCESS:&#32;The&#32;operation&#32;completed&#32;successfully.&quot;</emphasis>,
219 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ERROR:&#32;The&#32;operation&#32;has&#32;failed.&quot;</emphasis>,
220 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;INVALID:&#32;The&#32;input&#32;parameters&#32;are&#32;incorrect.&quot;</emphasis>,
221 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EADDRINUSE:&#32;The&#32;socket&apos;s&#32;local&#32;address&#32;is&#32;in&#32;use&#32;and&#32;the&#32;socket&#32;was&#32;not&#32;marked&#32;to&#32;allow&#32;address&#32;reuse&#32;with&#32;SO_REUSEADDR.&quot;</emphasis>,
222 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EDESTADDRREQ:&#32;A&#32;destination&#32;address&#32;is&#32;required.&quot;</emphasis>,
223 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EAFNOSUPPORT:&#32;The&#32;address&#32;family&#32;is&#32;not&#32;supported.&quot;</emphasis>,
224 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EISCONN:&#32;The&#32;socket&#32;is&#32;already&#32;connected.&quot;</emphasis>,
225 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EINTR:&#32;A&#32;blocking&#32;sockets&#32;call&#32;was&#32;canceled.&quot;</emphasis>,
226 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EINPROGRESS:&#32;A&#32;blocking&#32;sockets&#32;call&#32;is&#32;in&#32;progress,&#32;or&#32;the&#32;service&#32;provider&#32;is&#32;still&#32;processing&#32;a&#32;callback&#32;function.&quot;</emphasis>,
227 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EACCES:&#32;The&#32;requested&#32;address&#32;is&#32;a&#32;broadcast&#32;address,&#32;but&#32;the&#32;appropriate&#32;flag&#32;was&#32;not&#32;set.&quot;</emphasis>,
228 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EFAULT:&#32;The&#32;buffer&#32;parameter&#32;is&#32;not&#32;completely&#32;contained&#32;in&#32;a&#32;valid&#32;part&#32;of&#32;the&#32;user&#32;address&#32;space.&quot;</emphasis>,
229 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ECONNRESET:&#32;The&#32;virtual&#32;circuit&#32;was&#32;reset&#32;by&#32;the&#32;remote&#32;side&#32;executing&#32;a&#32;hard&#32;or&#32;abortive&#32;close.&quot;</emphasis>,
230 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ECONNABORTED:&#32;The&#32;virtual&#32;circuit&#32;was&#32;terminated&#32;due&#32;to&#32;a&#32;time-out&#32;or&#32;other&#32;failure.&quot;</emphasis>,
231 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ETIMEDOUT:&#32;The&#32;connection&#32;has&#32;been&#32;dropped,&#32;because&#32;of&#32;a&#32;network&#32;failure.&quot;</emphasis>,
232 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ECONNREFUSED:&#32;The&#32;connection&#32;was&#32;refused.&quot;</emphasis>,
233 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENOTSOCK:&#32;The&#32;descriptor&#32;is&#32;not&#32;a&#32;socket.&quot;</emphasis>,
234 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EDQUOT:&#32;The&#32;disk&#32;quota&#32;is&#32;exceeded.&quot;</emphasis>,
235 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENETRESET:&#32;The&#32;connection&#32;has&#32;been&#32;broken&#32;due&#32;to&#32;the&#32;keep-alive&#32;activity&#32;detecting&#32;a&#32;failure.&quot;</emphasis>,
236 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EPFNOSUPPORT:&#32;The&#32;protocol&#32;family&#32;is&#32;not&#32;supported.&quot;</emphasis>,
237 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EHOSTDOWN:&#32;The&#32;destination&#32;host&#32;is&#32;down.&quot;</emphasis>,
238 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EHOSTUNREACH:&#32;The&#32;remote&#32;host&#32;cannot&#32;be&#32;reached&#32;from&#32;this&#32;host&#32;at&#32;this&#32;time.&quot;</emphasis>,
239 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EALREADY:&#32;Operation&#32;in&#32;progress.&quot;</emphasis>,
240 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EADDRNOTAVAIL:&#32;The&#32;address&#32;is&#32;not&#32;available.&quot;</emphasis>,
241 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;INVALID_PARAMETER:&#32;One&#32;or&#32;more&#32;parameters&#32;are&#32;invalid.&quot;</emphasis>,
242 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EPROTOTYPE:&#32;The&#32;protocol&#32;type&#32;is&#32;invalid&#32;for&#32;the&#32;socket.&quot;</emphasis>,
243 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENOPROTOOPT:&#32;The&#32;protocol&#32;option&#32;is&#32;invalid.&quot;</emphasis>,
244 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EINVALIDPROVIDER:&#32;The&#32;service&#32;provider&#32;is&#32;invalid.&quot;</emphasis>,
245 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EREMOTE:&#32;The&#32;item&#32;is&#32;not&#32;available&#32;locally.&quot;</emphasis>,
246 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EMSGSIZE:&#32;The&#32;message&#32;size&#32;is&#32;too&#32;long.&quot;</emphasis>,
247 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENAMETOOLONG:&#32;The&#32;name&#32;is&#32;too&#32;long.&quot;</emphasis>,
248 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENETDOWN:&#32;The&#32;network&#32;subsystem&#32;has&#32;failed.&quot;</emphasis>,
249 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENETUNREACH:&#32;The&#32;network&#32;is&#32;unreachable.&quot;</emphasis>,
250 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENOBUFS:&#32;No&#32;buffer&#32;space&#32;is&#32;available.&quot;</emphasis>,
251 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EMFILE:&#32;No&#32;more&#32;socket&#32;descriptors&#32;are&#32;available.&quot;</emphasis>,
252 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;_NOT_ENOUGH_MEMORY:&#32;The&#32;system&#32;does&#32;not&#32;have&#32;enough&#32;memory&#32;available.&quot;</emphasis>,
253 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EINVAL:&#32;The&#32;socket&#32;has&#32;not&#32;been&#32;bound&#32;with&#32;bind,&#32;or&#32;MSG_OOB&#32;was&#32;specified&#32;for&#32;a&#32;socket&#32;with&#32;SO_OOBINLINE&#32;enabled.&quot;</emphasis>,
254 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ENOTCONN:&#32;The&#32;socket&#32;is&#32;not&#32;connected.&quot;</emphasis>,
255 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;NOTINITIALISED:&#32;A&#32;successful&#32;Startup&#32;call&#32;must&#32;occur&#32;before&#32;using&#32;this&#32;function.&quot;</emphasis>,
256 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EOPNOTSUPP:&#32;The&#32;socket&#32;operation&#32;is&#32;not&#32;supported.&quot;</emphasis>,
257 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EPROTONOSUPPORT:&#32;The&#32;protocol&#32;is&#32;not&#32;supported.&quot;</emphasis>,
258 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ESHUTDOWN:&#32;The&#32;socket&#32;has&#32;been&#32;shut&#32;down.&quot;</emphasis>,
259 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ESOCKTNOSUPPORT:&#32;The&#32;socket&#32;type&#32;is&#32;not&#32;supported.&quot;</emphasis>,
260 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;SYSNOTREADY:&#32;The&#32;subsystem&#32;is&#32;unavailable.&quot;</emphasis>,
261 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EPROCLIM:&#32;The&#32;host&#32;is&#32;using&#32;too&#32;many&#32;processes.&quot;</emphasis>,
262 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EUSERS:&#32;The&#32;user&#32;quota&#32;is&#32;exceeded.&quot;</emphasis>,
263 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;ELOOP:&#32;Can&#32;not&#32;translate&#32;name.&quot;</emphasis>,
264 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;EWOULDBLOCK:&#32;The&#32;socket&#32;is&#32;marked&#32;as&#32;nonblocking&#32;and&#32;the&#32;requested&#32;operation&#32;would&#32;block.&quot;</emphasis>,
265 &#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,
266 };
267 
273 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structqsc__socket__receive__async__state">qsc_socket_receive_async_state</link>
274 {
275 &#32;&#32;&#32;&#32;void&#32;(*<link linkend="_structqsc__socket__receive__async__state_1a6c96dced05a0a25af218b3a978c74b87">callback</link>)(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>*&#32;msglen);&#32;
276 &#32;&#32;&#32;&#32;void&#32;(*<link linkend="_structqsc__socket__receive__async__state_1a742fffe2ba7953e94857be1c87069d01">error</link>)(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;qsc_socket_exceptions&#32;exception);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
277 &#32;&#32;&#32;&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;<link linkend="_structqsc__socket__receive__async__state_1ab765a6774e0fdaf15d0905c2e3843476">source</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
278 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structqsc__socket__receive__async__state_1a849c5562604b647d5ab064c5ee01a817">buffer</link>[QSC_SOCKET_RECEIVE_BUFFER_SIZE];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
279 }&#32;<link linkend="_structqsc__socket__receive__async__state">qsc_socket_receive_async_state</link>;
280 
286 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structqsc__socket__receive__poll__state">qsc_socket_receive_poll_state</link>
287 {
288 &#32;&#32;&#32;&#32;<link linkend="_structqsc__socket">qsc_socket</link>**&#32;<link linkend="_structqsc__socket__receive__poll__state_1ac3634d09cd922d2bea518db2f9f89645">sockarr</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
289 &#32;&#32;&#32;&#32;void&#32;(*<link linkend="_structqsc__socket__receive__poll__state_1acea9459e7e1fe856fb05c9b9bba1bad9">callback</link>)(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;id);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
290 &#32;&#32;&#32;&#32;void&#32;(*<link linkend="_structqsc__socket__receive__poll__state_1ab578ff3ac205a666bccf6a6d4ccac4ce">error</link>)(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;qsc_socket_exceptions&#32;exception);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
291 &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_structqsc__socket__receive__poll__state_1a86988a65e0d3ece7990c032c159786d6">count</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
292 }&#32;<link linkend="_structqsc__socket__receive__poll__state">qsc_socket_receive_poll_state</link>;
293 
294 <emphasis role="comment">/***&#32;Function&#32;Prototypes&#32;***/</emphasis>
295 
302 <emphasis role="comment">//QSC_EXPORT_API&#32;void&#32;qsc_socket_exception_callback(qsc_socket*&#32;source,&#32;qsc_socket_exceptions&#32;error);</emphasis>
303 
311 <emphasis role="comment">//QSC_EXPORT_API&#32;void&#32;qsc_socket_receive_async_callback(qsc_socket*&#32;source,&#32;const&#32;uint8_t*&#32;message,&#32;size_t*&#32;msglen);</emphasis>
312 
319 <emphasis role="comment">//QSC_EXPORT_API&#32;void&#32;qsc_socket_receive_poll_callback(const&#32;qsc_socket*&#32;source,&#32;size_t&#32;error);</emphasis>
320 
321 <emphasis role="comment">/***&#32;Accessors&#32;***/</emphasis>
322 
329 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_socket_ipv4_valid_address(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;address);
330 
337 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_socket_ipv6_valid_address(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;address);
338 
346 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_socket_is_blocking(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock);
347 
355 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_socket_is_connected(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock);
356 
365 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_accept(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;source,&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;target);
366 
373 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_socket_attach(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;source,&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;target);
374 
384 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_bind(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;address,&#32;uint16_t&#32;port);
385 
395 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_bind_ipv4(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__ipinfo__ipv4__address">qsc_ipinfo_ipv4_address</link>*&#32;address,&#32;uint16_t&#32;port);
396 
406 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_bind_ipv6(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__ipinfo__ipv6__address">qsc_ipinfo_ipv6_address</link>*&#32;address,&#32;uint16_t&#32;port);
407 
413 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_socket_clear_socket(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock);
414 
422 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_close_socket(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock);
423 
433 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_connect(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;address,&#32;uint16_t&#32;port);
434 
444 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_connect_ipv4(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__ipinfo__ipv4__address">qsc_ipinfo_ipv4_address</link>*&#32;address,&#32;uint16_t&#32;port);
445 
455 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_connect_ipv6(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__ipinfo__ipv6__address">qsc_ipinfo_ipv6_address</link>*&#32;address,&#32;uint16_t&#32;port);
456 
467 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_create(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;qsc_socket_address_families&#32;family,&#32;qsc_socket_transports&#32;transport,&#32;qsc_socket_protocols&#32;protocol);
468 
477 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_listen(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;int32_t&#32;backlog);
478 
486 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_max_send_buffer_size(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock);
487 
497 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_peek(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;otplen);
498 
511 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_receive(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;otplen,&#32;qsc_socket_receive_flags&#32;flag);
512 
518 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_receive_async(<link linkend="_structqsc__socket__receive__async__state">qsc_socket_receive_async_state</link>*&#32;state);
519 
530 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_receive_all(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;otplen,&#32;qsc_socket_receive_flags&#32;flag);
531 
544 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_receive_from(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;destination,&#32;uint16_t&#32;port,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;otplen,&#32;qsc_socket_receive_flags&#32;flag);
545 
554 QSC_EXPORT_API&#32;uint32_t&#32;qsc_socket_receive_poll(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket__receive__poll__state">qsc_socket_receive_poll_state</link>*&#32;state);
555 
568 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_send(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen,&#32;qsc_socket_send_flags&#32;flag);
569 
580 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_send_to(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen,&#32;qsc_socket_send_flags&#32;flag);
581 
592 QSC_EXPORT_API&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;qsc_socket_send_all(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;input,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen,&#32;qsc_socket_send_flags&#32;flag);
593 
602 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_shut_down(<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;qsc_socket_shut_down_flags&#32;parameters);
603 
604 <emphasis role="comment">/*~~~&#32;Helper&#32;Functions&#32;~~~*/</emphasis>
605 
612 QSC_EXPORT_API&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;qsc_socket_error_to_string(qsc_socket_exceptions&#32;code);
613 
619 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_get_last_error(<emphasis role="keywordtype">void</emphasis>);
620 
630 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_ioctl(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;int32_t&#32;command,&#32;uint32_t*&#32;arguments);
631 
640 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_socket_receive_ready(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>&#32;timeval*&#32;timeout);
641 
650 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_socket_send_ready(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>&#32;timeval*&#32;timeout);
651 
657 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;qsc_socket_set_last_error(qsc_socket_exceptions&#32;error);
658 
664 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_shut_down_sockets(<emphasis role="keywordtype">void</emphasis>);
665 
677 QSC_EXPORT_API&#32;qsc_socket_exceptions&#32;qsc_socket_set_option(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structqsc__socket">qsc_socket</link>*&#32;sock,&#32;qsc_socket_protocols&#32;level,&#32;qsc_socket_options&#32;option,&#32;int32_t&#32;optval);
678 
684 QSC_EXPORT_API&#32;<emphasis role="keywordtype">bool</emphasis>&#32;qsc_socket_start_sockets(<emphasis role="keywordtype">void</emphasis>);
685 
686 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
