#ifndef PARAMS_H
#define PARAMS_H

#ifndef QCX_DILITHIUM_MODE
#define QCX_DILITHIUM_MODE 3
#endif

#define DILITHIUM_SEED_SIZE 32
#define DILITHIUM_CRH_SIZE 48
#define DILITHIUM_N 256
#define DILITHIUM_Q 8380417 
#define DILITHIUM_QBITS 23
#define DILITHIUM_UNITYROOT 1753
#define DILITHIUM_D 14
#define DILITHIUM_GAMMA1 ((DILITHIUM_Q - 1) / 16)
#define DILITHIUM_GAMMA2 (DILITHIUM_GAMMA1 / 2)
#define DILITHIUM_ALPHA (2 * DILITHIUM_GAMMA2)

#if (QCX_DILITHIUM_MODE == 1)
#	define DILITHIUM_K 3
#	define DILITHIUM_L 2
#	define DILITHIUM_ETA 7
#	define DILITHIUM_SETABITS 4
#	define DILITHIUM_BETA 375
#	define DILITHIUM_OMEGA 64
#elif (QCX_DILITHIUM_MODE == 2)
#	define DILITHIUM_K 4
#	define DILITHIUM_L 3
#	define DILITHIUM_ETA 6
#	define DILITHIUM_SETABITS 4
#	define DILITHIUM_BETA 325
#	define DILITHIUM_OMEGA 80
#elif (QCX_DILITHIUM_MODE == 3)
#	define DILITHIUM_K 5
#	define DILITHIUM_L 4
#	define DILITHIUM_ETA 5
#	define DILITHIUM_SETABITS 4
#	define DILITHIUM_BETA 275
#	define DILITHIUM_OMEGA 96
#elif (QCX_DILITHIUM_MODE == 4)
#	define DILITHIUM_K 6
#	define DILITHIUM_L 5
#	define DILITHIUM_ETA 3
#	define DILITHIUM_SETABITS 3
#	define DILITHIUM_BETA 175
#	define DILITHIUM_OMEGA 120
#else
#	error the dilithium mode is invalid!
#endif

#define DILITHIUM_POLT1_SIZE_PACKED ((DILITHIUM_N * (DILITHIUM_QBITS - DILITHIUM_D)) / 8)
#define DILITHIUM_POLT0_SIZE_PACKED ((DILITHIUM_N * DILITHIUM_D) / 8)
#define DILITHIUM_POLETA_SIZE_PACKED ((DILITHIUM_N * DILITHIUM_SETABITS) / 8)
#define DILITHIUM_POLZ_SIZE_PACKED ((DILITHIUM_N * (DILITHIUM_QBITS - 3)) / 8)
#define DILITHIUM_POLW1_SIZE_PACKED ((DILITHIUM_N * 4) / 8)

/*!
\def DILITHIUM_ALGNAME
* Read Only: The formal algorithm name
*/
#define DILITHIUM_ALGNAME "DILITHIUM"

/*!
\def DILITHIUM_PUBLICKEY_SIZE
* Read Only: The public key size in bytes
*/
#define DILITHIUM_PUBLICKEY_SIZE (DILITHIUM_SEED_SIZE + DILITHIUM_K * DILITHIUM_POLT1_SIZE_PACKED)

/*!
\def DILITHIUM_SECRETKEY_SIZE
* Read Only: The private key size in bytes
*/
#define DILITHIUM_SECRETKEY_SIZE (2 * DILITHIUM_SEED_SIZE + (DILITHIUM_L + DILITHIUM_K) * DILITHIUM_POLETA_SIZE_PACKED + DILITHIUM_CRH_SIZE + DILITHIUM_K * DILITHIUM_POLT0_SIZE_PACKED)

/*!
\def DILITHIUM_SIGNATURE_SIZE
* Read Only: The signature size in bytes
*/
#define DILITHIUM_SIGNATURE_SIZE (DILITHIUM_L * DILITHIUM_POLZ_SIZE_PACKED + (DILITHIUM_OMEGA + DILITHIUM_K) + (DILITHIUM_N / 8 + 8))

#endif
