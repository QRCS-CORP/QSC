
/* 2024 Quantum Resistant Cryptographic Solutions Corporation
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Quantum Resistant Cryptographic Solutions Incorporated.
 * The intellectual and technical concepts contained
 * herein are proprietary to Quantum Resistant Cryptographic Solutions Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Quantum Resistant Cryptographic Solutions Incorporated.
 *
 * Written by John G. Underhill
 * Contact: develop@qrcs.ca
 */

#ifndef QSCTEST_CSX_TEST_H
#define QSCTEST_CSX_TEST_H

#include "../QSC/common.h"
#include "../QSC/csx.h"

/**
* \file csx_test.h
* \brief CSX-512 Known Answer Tests \n
* CSXP40 known answer comparison (KAT) tests. \n
* Test vectors are from the CEX cryptographic library, reference:
* The C++ <a href="https://github.com/Steppenwolfe65/CEX">CEX cryptographic library</a>
* \author John Underhill \n
* \date October 25, 2020
*/

#define QSCTEST_CSX_TEST_CYCLES 100

#if defined(QSC_SYSTEM_AVX_INTRINSICS)
#if !defined(QSC_CSX_AUTHENTICATED)
#		define QSCTEST_CSX_WIDE_BLOCK_TESTS
#	endif
#endif

/**
* \brief Tests the CSX 512-bit key KAT vectors from CEX.
* The C++ <a href="https://github.com/Steppenwolfe65/CEX">CEX cryptrographic library</a>
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* The test uses use original (and authoritative) vectors generated by the CEX library implementation</a>
* <a href="https://github.com/Steppenwolfe65/CEX/blob/master/Test/CSXTest.cpp">CEX CSX tests</a>
*/
bool qsctest_csx512_kat(void);

/**
* \brief Tests CSX-512 with random inputs for correct operation.
*
* \return Returns true for success
*/
bool qsctest_csx512_stress(void);

#if defined(QSCTEST_CSX_WIDE_BLOCK_TESTS)
/**
* \brief Tests the CSX AVX functions for equal output to sequential processing.
*
* \return Returns true for success
*/
bool qsctest_csx_wide_equality(void);
#endif

/**
* \brief Run all tests.
*/
void qsctest_csx_run(void);

#endif
