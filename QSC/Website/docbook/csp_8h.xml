<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_csp_8h" xml:lang="en-US">
<title>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/csp.h File Reference</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/csp.h</primary></indexterm>
<para>

<para>Cryptographic System entropy Provider Provides access to either the Windows CryptGenRandom provider or the /dev/urandom pool on Posix systems. This provider is not recommended for stand-alone use, but should be combined with another entropy provider to seed a MAC or DRBG function to provide quality random output. The ACP entropy provider is the recommended provider in this library. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;common.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_csp_8h_1a8bdff8915c5e41cf83cd71a757730501"/>#define <emphasis role="strong">QSC_CSP_SEED_MAX</emphasis>&#160;&#160;&#160;1024000</para>

<para>The maximum seed size that can be extracted from a single generate call. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>QSC_EXPORT_API bool <link linkend="_csp_8h_1ad0f5075584956ab81d0ced0de73930f4">qsc_csp_generate</link> (uint8_t *output, size_t length)</para>

<para>Get an array of pseudo-random bytes from the system entropy provider. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API uint16_t <link linkend="_csp_8h_1a4c3a1c754f0e2c0798928e001ce301ba">qsc_csp_uint16</link> ()</para>

<para>Get a random 16-bit unsigned integer. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API uint32_t <link linkend="_csp_8h_1a2fa98f1bb4a6bf69bdc71c2a72f0f1eb">qsc_csp_uint32</link> ()</para>

<para>Get a random 32-bit unsigned integer. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API uint64_t <link linkend="_csp_8h_1a948527d16f086ebae90c5abb92911632">qsc_csp_uint64</link> ()</para>

<para>Get a random 64-bit unsigned integer. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Cryptographic System entropy Provider Provides access to either the Windows CryptGenRandom provider or the /dev/urandom pool on Posix systems. This provider is not recommended for stand-alone use, but should be combined with another entropy provider to seed a MAC or DRBG function to provide quality random output. The ACP entropy provider is the recommended provider in this library. </para>

<para><formalpara><title>Author</title>

<para>John Underhill </para>
</formalpara>
<formalpara><title>Date</title>

<para>June 05, 2019 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_csp_8h_1ad0f5075584956ab81d0ced0de73930f4"/><section>
    <title>qsc_csp_generate()</title>
<indexterm><primary>qsc_csp_generate</primary><secondary>csp.h</secondary></indexterm>
<indexterm><primary>csp.h</primary><secondary>qsc_csp_generate</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API bool qsc_csp_generate (uint8_t * output, size_t length)</computeroutput></para><para>

<para>Get an array of pseudo-random bytes from the system entropy provider. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>output</entry><entry>
<para>Pointer to the output byte array </para>
</entry>
                            </row>
                            <row>
<entry>length</entry><entry>
<para>The number of bytes to copy </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns true for success </para>
</formalpara>
</para>
</section>
<anchor xml:id="_csp_8h_1a4c3a1c754f0e2c0798928e001ce301ba"/><section>
    <title>qsc_csp_uint16()</title>
<indexterm><primary>qsc_csp_uint16</primary><secondary>csp.h</secondary></indexterm>
<indexterm><primary>csp.h</primary><secondary>qsc_csp_uint16</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API uint16_t qsc_csp_uint16 ( )</computeroutput></para><para>

<para>Get a random 16-bit unsigned integer. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Returns the random integer </para>
</formalpara>
</para>
</section>
<anchor xml:id="_csp_8h_1a2fa98f1bb4a6bf69bdc71c2a72f0f1eb"/><section>
    <title>qsc_csp_uint32()</title>
<indexterm><primary>qsc_csp_uint32</primary><secondary>csp.h</secondary></indexterm>
<indexterm><primary>csp.h</primary><secondary>qsc_csp_uint32</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API uint32_t qsc_csp_uint32 ( )</computeroutput></para><para>

<para>Get a random 32-bit unsigned integer. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Returns the random integer </para>
</formalpara>
</para>
</section>
<anchor xml:id="_csp_8h_1a948527d16f086ebae90c5abb92911632"/><section>
    <title>qsc_csp_uint64()</title>
<indexterm><primary>qsc_csp_uint64</primary><secondary>csp.h</secondary></indexterm>
<indexterm><primary>csp.h</primary><secondary>qsc_csp_uint64</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API uint64_t qsc_csp_uint64 ( )</computeroutput></para><para>

<para>Get a random 64-bit unsigned integer. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Returns the random integer </para>
</formalpara>
</para>
</section>
</section>
</section>
