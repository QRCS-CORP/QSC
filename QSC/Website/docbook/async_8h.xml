<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_async_8h" xml:lang="en-US">
<title>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/async.h File Reference</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/async.h</primary></indexterm>
<para>

<para>This file contains thread and mutex functions. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;common.h&quot;<?linebreak?>#include &lt;stdarg.h&gt;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_async_8h_1a3c189816d9a571093753c76ec2ffd8bf"/>#define <emphasis role="strong">QSC_ASYNC_PARALLEL_MAX</emphasis>&#160;&#160;&#160;128</para>

<para>The parallel for maximum threads. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1a7f8db684684526c71d4170dc21ff2ba9">qsc_async_launch_thread</link> (void(*func)(void *), void *state)</para>

<para>Launch a function on a new thread. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1aa3636877a217e7fae3a1b837a7565b11">qsc_async_launch_parallel_threads</link> (void(*func)(void *), size_t count,...)</para>

<para>Launch a series of threads, using variadic function arguments. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API qsc_mutex <link linkend="_async_8h_1a4954963a0cadf0cb0e2c15c5ea054cad">qsc_async_mutex_create</link> (void)</para>

<para>Create a mutex. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API bool <link linkend="_async_8h_1a64a9d5cffece1175d8a3ad34100408de">qsc_async_mutex_destroy</link> (qsc_mutex mtx)</para>

<para>Destroy a mutex. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1acaf7453fb706fa1b0dec8d91a7fdf640">qsc_async_mutex_lock</link> (qsc_mutex mtx)</para>

<para>Lock a mutex. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API qsc_mutex <link linkend="_async_8h_1a15617341f5c058f8983b43e932a11426">qsc_async_mutex_lock_ex</link> (void)</para>

<para>Creates and locks a mutex. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1a60bbbda56875a11753818efa9fe80ed7">qsc_async_mutex_unlock</link> (qsc_mutex mtx)</para>

<para>Unlock a mutex. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1ac0be47e75a8d1ecd00210cc66cb54b94">qsc_async_mutex_unlock_ex</link> (qsc_mutex mtx)</para>

<para>Unlocks and destroys a mutex. The mutex must be initialized and destroyed. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API bool <link linkend="_async_8h_1af5f02197d73d3ad1f1437e682179c156">qsc_async_parallel_for</link> (void(*task)(void *context, size_t index), void *context, size_t nthreads)</para>

<para>A parallel for loop implementation Processes each function call on a unique thread and waits for all threads before returning. </para>
</listitem>
            <listitem><para><anchor xml:id="_async_8h_1ad750b14b3b43754a4b16e453e1f9beef"/>QSC_EXPORT_API size_t <emphasis role="strong">qsc_async_processor_count</emphasis> (void)</para>

<para>Returns the number of CPU cores (including hyper-threads) available on the system. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API qsc_thread <link linkend="_async_8h_1aa9e695f1a69adf60036a87c8c280d5f4">qsc_async_thread_create</link> (void(*func)(void *), void *state)</para>

<para>Create a thread with one parameter. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API qsc_thread <link linkend="_async_8h_1a4b1ff875d3f39695ca7909c6abbc9147">qsc_async_thread_create_ex</link> (void(*func)(void **), void **args)</para>

<para>Create a thread with multiple parameters. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API int32_t <link linkend="_async_8h_1abc10be40896608e81479ec4af0a0cdd9">qsc_async_thread_resume</link> (qsc_thread handle)</para>

<para>Resume a suspended thread. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1a4ba5462b525beaa11606e01eeedce5b2">qsc_async_thread_sleep</link> (uint32_t msec)</para>

<para>Pause the thread for a number of milliseconds. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API int32_t <link linkend="_async_8h_1a3777c21d4ae851fa3fe70e9e09646e13">qsc_async_thread_suspend</link> (qsc_thread handle)</para>

<para>Suspend a thread. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API bool <link linkend="_async_8h_1ab924af55d20d9d7c11ec895d197738bd">qsc_async_thread_terminate</link> (qsc_thread handle)</para>

<para>Terminate a thread. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1a4240fd2c10d323c1f7d3f17f55a1907d">qsc_async_thread_wait</link> (qsc_thread handle)</para>

<para>Wait for a thread to complete execution. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1ab5f277e4e490c32c576a16ae4cbfe202">qsc_async_thread_wait_time</link> (qsc_thread handle, uint32_t msec)</para>

<para>Wait a number of milliseconds for a thread to complete execution. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_async_8h_1ab712d219a0fa8be5c6260ae53f41b428">qsc_async_thread_wait_all</link> (qsc_thread *handles, size_t count)</para>

<para>Wait for an array of threads to complete execution. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file contains thread and mutex functions. </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_async_8h_1aa3636877a217e7fae3a1b837a7565b11"/><section>
    <title>qsc_async_launch_parallel_threads()</title>
<indexterm><primary>qsc_async_launch_parallel_threads</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_launch_parallel_threads</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_launch_parallel_threads (void(* func&#160;)(void *), size_t count,  ...)</computeroutput></para><para>

<para>Launch a series of threads, using variadic function arguments. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>func</entry><entry>
<para>The function pointer </para>
</entry>
                            </row>
                            <row>
<entry>count</entry><entry>
<para>The number of arguments </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1a7f8db684684526c71d4170dc21ff2ba9"/><section>
    <title>qsc_async_launch_thread()</title>
<indexterm><primary>qsc_async_launch_thread</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_launch_thread</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_launch_thread (void(* func&#160;)(void *), void * state)</computeroutput></para><para>

<para>Launch a function on a new thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>func</entry><entry>
<para>The function pointer </para>
</entry>
                            </row>
                            <row>
<entry>state</entry><entry>
<para>The function state </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1a4954963a0cadf0cb0e2c15c5ea054cad"/><section>
    <title>qsc_async_mutex_create()</title>
<indexterm><primary>qsc_async_mutex_create</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_mutex_create</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API qsc_mutex qsc_async_mutex_create (void )</computeroutput></para><para>

<para>Create a mutex. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Returns the mutex handle </para>
</formalpara>
</para>
</section>
<anchor xml:id="_async_8h_1a64a9d5cffece1175d8a3ad34100408de"/><section>
    <title>qsc_async_mutex_destroy()</title>
<indexterm><primary>qsc_async_mutex_destroy</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_mutex_destroy</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API bool qsc_async_mutex_destroy (qsc_mutex mtx)</computeroutput></para><para>

<para>Destroy a mutex. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mtx</entry><entry>
<para>The mutex to destroy </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns true for success </para>
</formalpara>
</para>
</section>
<anchor xml:id="_async_8h_1acaf7453fb706fa1b0dec8d91a7fdf640"/><section>
    <title>qsc_async_mutex_lock()</title>
<indexterm><primary>qsc_async_mutex_lock</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_mutex_lock</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_mutex_lock (qsc_mutex mtx)</computeroutput></para><para>

<para>Lock a mutex. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mtx</entry><entry>
<para>The mutex to lock </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1a15617341f5c058f8983b43e932a11426"/><section>
    <title>qsc_async_mutex_lock_ex()</title>
<indexterm><primary>qsc_async_mutex_lock_ex</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_mutex_lock_ex</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API qsc_mutex qsc_async_mutex_lock_ex (void )</computeroutput></para><para>

<para>Creates and locks a mutex. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Returns the locked mutex </para>
</formalpara>
</para>
</section>
<anchor xml:id="_async_8h_1a60bbbda56875a11753818efa9fe80ed7"/><section>
    <title>qsc_async_mutex_unlock()</title>
<indexterm><primary>qsc_async_mutex_unlock</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_mutex_unlock</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_mutex_unlock (qsc_mutex mtx)</computeroutput></para><para>

<para>Unlock a mutex. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mtx</entry><entry>
<para>The mutex to unlock </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1ac0be47e75a8d1ecd00210cc66cb54b94"/><section>
    <title>qsc_async_mutex_unlock_ex()</title>
<indexterm><primary>qsc_async_mutex_unlock_ex</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_mutex_unlock_ex</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_mutex_unlock_ex (qsc_mutex mtx)</computeroutput></para><para>

<para>Unlocks and destroys a mutex. The mutex must be initialized and destroyed. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mtx</entry><entry>
<para>The mutex to unlock </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1af5f02197d73d3ad1f1437e682179c156"/><section>
    <title>qsc_async_parallel_for()</title>
<indexterm><primary>qsc_async_parallel_for</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_parallel_for</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API bool qsc_async_parallel_for (void(* task&#160;)(void *context, size_t index), void * context, size_t nthreads)</computeroutput></para><para>

<para>A parallel for loop implementation Processes each function call on a unique thread and waits for all threads before returning. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>task</entry><entry>
<para>A pointer to the function to run in parallel, with a pointer to a state, and the index value </para>
</entry>
                            </row>
                            <row>
<entry>context</entry><entry>
<para>The function context </para>
</entry>
                            </row>
                            <row>
<entry>nthreads</entry><entry>
<para>The number of threads to process</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns true if all threads were created </para>
</formalpara>
</para>
</section>
<anchor xml:id="_async_8h_1aa9e695f1a69adf60036a87c8c280d5f4"/><section>
    <title>qsc_async_thread_create()</title>
<indexterm><primary>qsc_async_thread_create</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_create</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API qsc_thread qsc_async_thread_create (void(* func&#160;)(void *), void * state)</computeroutput></para><para>

<para>Create a thread with one parameter. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>func</entry><entry>
<para>The thread function </para>
</entry>
                            </row>
                            <row>
<entry>state</entry><entry>
<para>The function state</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns a thread handle, or NULL on failure </para>
</formalpara>
</para>
</section>
<anchor xml:id="_async_8h_1a4b1ff875d3f39695ca7909c6abbc9147"/><section>
    <title>qsc_async_thread_create_ex()</title>
<indexterm><primary>qsc_async_thread_create_ex</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_create_ex</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API qsc_thread qsc_async_thread_create_ex (void(* func&#160;)(void **), void ** args)</computeroutput></para><para>

<para>Create a thread with multiple parameters. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>func</entry><entry>
<para>The thread function </para>
</entry>
                            </row>
                            <row>
<entry>args</entry><entry>
<para>The function argument list </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns a thread handle, or NULL on failure </para>
</formalpara>
</para>
</section>
<anchor xml:id="_async_8h_1abc10be40896608e81479ec4af0a0cdd9"/><section>
    <title>qsc_async_thread_resume()</title>
<indexterm><primary>qsc_async_thread_resume</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_resume</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API int32_t qsc_async_thread_resume (qsc_thread handle)</computeroutput></para><para>

<para>Resume a suspended thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handle</entry><entry>
<para>The thread to resume</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on success </para>
</formalpara>
</para>
</section>
<anchor xml:id="_async_8h_1a4ba5462b525beaa11606e01eeedce5b2"/><section>
    <title>qsc_async_thread_sleep()</title>
<indexterm><primary>qsc_async_thread_sleep</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_sleep</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_thread_sleep (uint32_t msec)</computeroutput></para><para>

<para>Pause the thread for a number of milliseconds. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>msec</entry><entry>
<para>The number of milliseconds to sleep </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1a3777c21d4ae851fa3fe70e9e09646e13"/><section>
    <title>qsc_async_thread_suspend()</title>
<indexterm><primary>qsc_async_thread_suspend</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_suspend</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API int32_t qsc_async_thread_suspend (qsc_thread handle)</computeroutput></para><para>

<para>Suspend a thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handle</entry><entry>
<para>The thread to suspend </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1ab924af55d20d9d7c11ec895d197738bd"/><section>
    <title>qsc_async_thread_terminate()</title>
<indexterm><primary>qsc_async_thread_terminate</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_terminate</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API bool qsc_async_thread_terminate (qsc_thread handle)</computeroutput></para><para>

<para>Terminate a thread. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handle</entry><entry>
<para>The thread to terminate (terminates calling thread on windows) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1a4240fd2c10d323c1f7d3f17f55a1907d"/><section>
    <title>qsc_async_thread_wait()</title>
<indexterm><primary>qsc_async_thread_wait</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_wait</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_thread_wait (qsc_thread handle)</computeroutput></para><para>

<para>Wait for a thread to complete execution. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handle</entry><entry>
<para>The thread handle </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1ab712d219a0fa8be5c6260ae53f41b428"/><section>
    <title>qsc_async_thread_wait_all()</title>
<indexterm><primary>qsc_async_thread_wait_all</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_wait_all</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_thread_wait_all (qsc_thread * handles, size_t count)</computeroutput></para><para>

<para>Wait for an array of threads to complete execution. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handles</entry><entry>
<para>The array of threads </para>
</entry>
                            </row>
                            <row>
<entry>count</entry><entry>
<para>The number of threads </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_async_8h_1ab5f277e4e490c32c576a16ae4cbfe202"/><section>
    <title>qsc_async_thread_wait_time()</title>
<indexterm><primary>qsc_async_thread_wait_time</primary><secondary>async.h</secondary></indexterm>
<indexterm><primary>async.h</primary><secondary>qsc_async_thread_wait_time</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_async_thread_wait_time (qsc_thread handle, uint32_t msec)</computeroutput></para><para>

<para>Wait a number of milliseconds for a thread to complete execution. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handle</entry><entry>
<para>The thread handle </para>
</entry>
                            </row>
                            <row>
<entry>msec</entry><entry>
<para>The number of milliseconds to wait </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
