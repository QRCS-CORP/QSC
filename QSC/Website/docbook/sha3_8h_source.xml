<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sha3_8h_source" xml:lang="en-US">
<title>sha3.h</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/sha3.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;2025&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation</emphasis>
2 <emphasis role="comment">&#32;*&#32;All&#32;Rights&#32;Reserved.</emphasis>
3 <emphasis role="comment">&#32;*</emphasis>
4 <emphasis role="comment">&#32;*&#32;NOTICE:&#32;This&#32;software&#32;and&#32;all&#32;accompanying&#32;materials&#32;are&#32;the&#32;exclusive&#32;</emphasis>
5 <emphasis role="comment">&#32;*&#32;property&#32;of&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation&#32;(QRCS).</emphasis>
6 <emphasis role="comment">&#32;*&#32;The&#32;intellectual&#32;and&#32;technical&#32;concepts&#32;contained&#32;within&#32;this&#32;implementation&#32;</emphasis>
7 <emphasis role="comment">&#32;*&#32;are&#32;proprietary&#32;to&#32;QRCS&#32;and&#32;its&#32;authorized&#32;licensors&#32;and&#32;are&#32;protected&#32;under&#32;</emphasis>
8 <emphasis role="comment">&#32;*&#32;applicable&#32;U.S.&#32;and&#32;international&#32;copyright,&#32;patent,&#32;and&#32;trade&#32;secret&#32;laws.</emphasis>
9 <emphasis role="comment">&#32;*</emphasis>
10 <emphasis role="comment">&#32;*&#32;CRYPTOGRAPHIC&#32;STANDARDS:</emphasis>
11 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;includes&#32;implementations&#32;of&#32;cryptographic&#32;algorithms&#32;such&#32;as&#32;</emphasis>
12 <emphasis role="comment">&#32;*&#32;&#32;&#32;SHA3,&#32;AES,&#32;and&#32;others.&#32;These&#32;algorithms&#32;are&#32;public&#32;domain&#32;or&#32;standardized&#32;</emphasis>
13 <emphasis role="comment">&#32;*&#32;&#32;&#32;by&#32;organizations&#32;such&#32;as&#32;NIST&#32;and&#32;are&#32;NOT&#32;the&#32;property&#32;of&#32;QRCS.</emphasis>
14 <emphasis role="comment">&#32;*&#32;-&#32;However,&#32;all&#32;source&#32;code,&#32;optimizations,&#32;and&#32;implementations&#32;in&#32;this&#32;library&#32;</emphasis>
15 <emphasis role="comment">&#32;*&#32;&#32;&#32;are&#32;original&#32;works&#32;of&#32;QRCS&#32;and&#32;are&#32;protected&#32;under&#32;this&#32;license.</emphasis>
16 <emphasis role="comment">&#32;*</emphasis>
17 <emphasis role="comment">&#32;*&#32;RESTRICTIONS:</emphasis>
18 <emphasis role="comment">&#32;*&#32;-&#32;Redistribution,&#32;modification,&#32;or&#32;unauthorized&#32;distribution&#32;of&#32;this&#32;software,&#32;</emphasis>
19 <emphasis role="comment">&#32;*&#32;&#32;&#32;in&#32;whole&#32;or&#32;in&#32;part,&#32;is&#32;strictly&#32;prohibited.</emphasis>
20 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;is&#32;provided&#32;for&#32;non-commercial,&#32;educational,&#32;and&#32;research&#32;</emphasis>
21 <emphasis role="comment">&#32;*&#32;&#32;&#32;purposes&#32;only.&#32;Commercial&#32;use&#32;in&#32;any&#32;form&#32;is&#32;expressly&#32;forbidden.</emphasis>
22 <emphasis role="comment">&#32;*&#32;-&#32;Licensing&#32;and&#32;authorized&#32;distribution&#32;are&#32;solely&#32;at&#32;the&#32;discretion&#32;of&#32;QRCS.</emphasis>
23 <emphasis role="comment">&#32;*&#32;-&#32;Any&#32;use&#32;of&#32;this&#32;software&#32;implies&#32;acceptance&#32;of&#32;these&#32;restrictions.</emphasis>
24 <emphasis role="comment">&#32;*</emphasis>
25 <emphasis role="comment">&#32;*&#32;DISCLAIMER:</emphasis>
26 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;provided&#32;&quot;as&#32;is,&quot;&#32;without&#32;warranty&#32;of&#32;any&#32;kind,&#32;express&#32;or&#32;</emphasis>
27 <emphasis role="comment">&#32;*&#32;implied,&#32;including&#32;but&#32;not&#32;limited&#32;to&#32;warranties&#32;of&#32;merchantability&#32;or&#32;fitness&#32;</emphasis>
28 <emphasis role="comment">&#32;*&#32;for&#32;a&#32;particular&#32;purpose.&#32;QRCS&#32;disclaims&#32;all&#32;liability&#32;for&#32;any&#32;direct,&#32;indirect,&#32;</emphasis>
29 <emphasis role="comment">&#32;*&#32;incidental,&#32;or&#32;consequential&#32;damages&#32;resulting&#32;from&#32;the&#32;use&#32;or&#32;misuse&#32;of&#32;this&#32;software.</emphasis>
30 <emphasis role="comment">&#32;*</emphasis>
31 <emphasis role="comment">&#32;*&#32;FULL&#32;LICENSE:</emphasis>
32 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;subject&#32;to&#32;the&#32;**Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;</emphasis>
33 <emphasis role="comment">&#32;*&#32;Proprietary&#32;License&#32;(QRCS-PL)**.&#32;The&#32;complete&#32;license&#32;terms&#32;are&#32;included&#32;</emphasis>
34 <emphasis role="comment">&#32;*&#32;in&#32;the&#32;LICENSE.txt&#32;file&#32;distributed&#32;with&#32;this&#32;software.</emphasis>
35 <emphasis role="comment">&#32;*</emphasis>
36 <emphasis role="comment">&#32;*&#32;Written&#32;by:&#32;John&#32;G.&#32;Underhill</emphasis>
37 <emphasis role="comment">&#32;*&#32;Contact:&#32;john.underhill@protonmail.com</emphasis>
38 <emphasis role="comment">&#32;*/</emphasis>
39 
40 
41 <emphasis role="preprocessor">#ifndef&#32;QSC_SHA3_H</emphasis>
42 <emphasis role="preprocessor">#define&#32;QSC_SHA3_H</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">common.h</link>&quot;</emphasis>
45 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_AVX_INTRINSICS)</emphasis>
46 <emphasis role="preprocessor">#&#32;&#32;&#32;include&#32;&quot;intrinsics.h&quot;</emphasis>
47 <emphasis role="preprocessor">#endif</emphasis>
48 
125 
130 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_CSHAKE_DOMAIN_ID&#32;0x04</emphasis>
131 
136 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_KMAC_DOMAIN_ID&#32;0x04</emphasis>
137 
142 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_KPA_DOMAIN_ID&#32;0x41</emphasis>
143 
148 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_PERMUTATION_ROUNDS&#32;24</emphasis>
149 
154 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_PERMUTATION_MAX_ROUNDS&#32;48</emphasis>
155 
160 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_PERMUTATION_MIN_ROUNDS&#32;12</emphasis>
161 
166 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_SHA3_DOMAIN_ID&#32;0x06</emphasis>
167 
172 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_SHAKE_DOMAIN_ID&#32;0x1F</emphasis>
173 
178 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_STATE_BYTE_SIZE&#32;200</emphasis>
179 
184 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_128_RATE&#32;168</emphasis>
185 
190 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_256_RATE&#32;136</emphasis>
191 
196 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_512_RATE&#32;72</emphasis>
197 
202 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_STATE_SIZE&#32;25</emphasis>
203 
208 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_STATE_BYTE_SIZE&#32;200</emphasis>
209 
214 <emphasis role="preprocessor">#define&#32;QSC_KMAC_256_KEY_SIZE&#32;32</emphasis>
215 
220 <emphasis role="preprocessor">#define&#32;QSC_KMAC_512_KEY_SIZE&#32;64</emphasis>
221 
226 <emphasis role="preprocessor">#define&#32;QSC_KECCAK_SCBKDF_DOMAIN_ID&#32;0x42</emphasis>
227 
232 <emphasis role="preprocessor">#define&#32;QSC_SHA3_128_HASH_SIZE&#32;16</emphasis>
233 
238 <emphasis role="preprocessor">#define&#32;QSC_SHA3_256_HASH_SIZE&#32;32</emphasis>
239 
244 <emphasis role="preprocessor">#define&#32;QSC_SHA3_512_HASH_SIZE&#32;64</emphasis>
245 
250 <emphasis role="preprocessor">#define&#32;QSC_SHAKE_256_KEY_SIZE&#32;32</emphasis>
251 
256 <emphasis role="preprocessor">#define&#32;QSC_SHAKE512_KEY_SIZE&#32;64</emphasis>
257 
258 <emphasis role="comment">/*&#32;common&#32;*/</emphasis>
259 
264 QSC_EXPORT_API&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structqsc__keccak__state">qsc_keccak_state</link>
265 {
266 &#32;&#32;&#32;&#32;uint64_t&#32;<link linkend="_structqsc__keccak__state_1a39b941c644a0456196b54369d5d7d5f9">state</link>[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
267 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structqsc__keccak__state_1aadf044fc48228e01bc1b2257955a00ee">buffer</link>[<link linkend="_sha3_8h_1a66f9f02e5abf8ad658e7a231444c4ee5">QSC_KECCAK_STATE_BYTE_SIZE</link>];&#32;&#32;&#32;&#32;&#32;
268 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_structqsc__keccak__state_1a7a04afe5347934be732ec70a70bd0a28">position</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
269 }&#32;<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>;
270 
275 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>
276 {
277 &#32;&#32;&#32;&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6ac804ad7f4afe342fe292518ebc3bdbb6">qsc_keccak_rate_none</link>&#32;=&#32;0,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
278 &#32;&#32;&#32;&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6a372c0121e8261592a28f39b84cad155f">qsc_keccak_rate_128</link>&#32;=&#32;<link linkend="_sha3_8h_1ab9ee5c7dfdd508dbba45370eb1214dad">QSC_KECCAK_128_RATE</link>,&#32;&#32;&#32;&#32;&#32;&#32;
279 &#32;&#32;&#32;&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6a289112e15dcba1fcb421e3c1f5afb0e6">qsc_keccak_rate_256</link>&#32;=&#32;<link linkend="_sha3_8h_1af0de2745d4d9cf9915394520a45ee8ea">QSC_KECCAK_256_RATE</link>,&#32;&#32;&#32;&#32;&#32;&#32;
280 &#32;&#32;&#32;&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6a436b417cabc032bb4f5e3cf6f3876b6c">qsc_keccak_rate_512</link>&#32;=&#32;<link linkend="_sha3_8h_1a6d1b98687bbdc843558ef0a1a5b2bfbf">QSC_KECCAK_512_RATE</link>,&#32;&#32;&#32;&#32;&#32;&#32;
281 }&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>;
282 
293 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aa5760b4f590a6908f4ce3ecb02425b95">qsc_keccak_absorb</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen,&#32;uint8_t&#32;domain,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
294 
306 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ab2fcc9bd9e0072d4e0144e9b84aad995">qsc_keccak_absorb_custom</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;name,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;namelen,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
307 
321 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1affff8a244c95763bfbf37ca2fa4f6775">qsc_keccak_absorb_key_custom</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;name,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;namelen,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
322 
331 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a341cdd637112e4de28f965120d9600d8">qsc_keccak_dispose</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx);
332 
343 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ae518149e35d00a9fa18a513fef96d399">qsc_keccak_finalize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;uint8_t&#32;domain,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
344 
353 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a31f4ede93232e9a74de047cf9f8196ba">qsc_keccak_incremental_absorb</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;uint32_t&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
354 
362 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aaf8d62a9abcdf338784d699695320221">qsc_keccak_incremental_finalize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;uint32_t&#32;rate,&#32;uint8_t&#32;domain);
363 
372 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a1a6c84d9e3018c8a197cbdc81c2edb4b">qsc_keccak_incremental_squeeze</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rate,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen);
373 
381 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a9e3466050e60101139e43f357f6688ca">qsc_keccak_permute</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
382 
390 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a4546645eff38ad66f1b88886f7cfb6c8">qsc_keccak_permute_p1600c</link>(uint64_t*&#32;state,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
391 
398 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a220755805dd7869debcd96cf9720dec9">qsc_keccak_permute_p1600u</link>(uint64_t*&#32;state);
399 
411 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aba170821d25f02507f60ed802f89ad99">qsc_keccak_squeezeblocks</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;nblocks,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
412 
419 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a48854cbaeed2945d29e2858642c45fa2">qsc_keccak_initialize_state</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx);
420 
432 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ac5df385de621651304659b6f7d9eaf25">qsc_keccak_update</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;rounds);
433 
434 <emphasis role="comment">/*&#32;SHA3&#32;*/</emphasis>
435 
446 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ac937d2baffe3ff4353ed21e4e6b78e54">qsc_sha3_compute128</link>(uint8_t*&#32;output,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
447 
458 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aa58c463d10c8a9fac1cf09a166b2e2a8">qsc_sha3_compute256</link>(uint8_t*&#32;output,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
459 
470 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a7edf8c0b0e93bbd35009ce03bed960b9">qsc_sha3_compute512</link>(uint8_t*&#32;output,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
471 
486 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a1edd6ffaa95e3c28320c1e9673fb2bcf">qsc_sha3_finalize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;uint8_t*&#32;output);
487 
494 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1af3952171393684803e6867b3fd39ec82">qsc_sha3_initialize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx);
495 
508 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a43c7ccd7826ba688d405d4131644fac4">qsc_sha3_update</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
509 
510 <emphasis role="comment">/*&#32;SHAKE&#32;*/</emphasis>
511 
523 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1addf93e9a23130b64cc705794e2b40db8">qsc_shake128_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen);
524 
536 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a49a90551b628f9a4afbf923dc3ccb827">qsc_shake256_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen);
537 
549 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ae03e696f6e6b35acacdfd99ff0f21216">qsc_shake512_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen);
550 
561 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1af45dfbdfe6be3d3b999632df70d64df6">qsc_shake_initialize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen);
562 
576 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aefee71079fe671bfac1740093ec70c9c">qsc_shake_squeezeblocks</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;nblocks);
577 
578 <emphasis role="comment">/*&#32;cSHAKE&#32;*/</emphasis>
579 
594 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aa66a0f47fcbba7f4b8a86982f27a6d0c">qsc_cshake128_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;name,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;namelen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
595 
610 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1add024bcf20fc37e04ecf28d59cc17c79">qsc_cshake256_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;name,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;namelen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
611 
626 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aef6159bd3a4517dd7fc1a822550790b6">qsc_cshake512_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;name,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;namelen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
627 
642 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ad049973b17b0e348ab2a43f4ab85bb8a">qsc_cshake_initialize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;name,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;namelen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
643 
657 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1abcaf8bd84272ae9846e90fdec4f86130">qsc_cshake_squeezeblocks</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;nblocks);
658 
672 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ac39508d3841cd3bf59d1cfcfdfffa98c">qsc_cshake_update</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen);
673 
674 <emphasis role="comment">/*&#32;KMAC&#32;*/</emphasis>
675 
690 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1afd15cc06fd56e1fe728da09cab39560e">qsc_kmac128_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
691 
706 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a0650fcdcd7f89ab1d224fc43b5c6c4b8">qsc_kmac256_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
707 
722 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a31366aac3d7a3fe31eb8a8e7db314bbd">qsc_kmac512_compute</link>(uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
723 
735 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ad03585c6b59ab05b24e9a8e101e31d56">qsc_kmac_update</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
736 
749 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a0bf604224cd963ad1c03dc333da392b0">qsc_kmac_finalize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen);
750 
763 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a7083c322daf2060be2598da058645bb8">qsc_kmac_initialize</link>(<link linkend="_structqsc__keccak__state">qsc_keccak_state</link>*&#32;ctx,&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
764 
765 <emphasis role="comment">/*&#32;KPA&#32;-&#32;Keccak-based&#32;Parallel&#32;Authentication&#32;*/</emphasis>
766 
767 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_HAS_AVX512)&#32;||&#32;defined(QSC_SYSTEM_HAS_AVX2)</emphasis>
768 <emphasis role="preprocessor">#define&#32;QSC_KPA_AVX_PARALLEL</emphasis>
769 <emphasis role="preprocessor">#endif</emphasis>
770 
775 <emphasis role="preprocessor">#define&#32;QSC_KPA_128_KEY_SIZE&#32;16</emphasis>
776 
781 <emphasis role="preprocessor">#define&#32;QSC_KPA_256_KEY_SIZE&#32;32</emphasis>
782 
787 <emphasis role="preprocessor">#define&#32;QSC_KPA_512_KEY_SIZE&#32;64</emphasis>
788 
793 <emphasis role="preprocessor">#define&#32;QSC_KPA_ROUNDS&#32;12</emphasis>
794 
799 <emphasis role="preprocessor">#define&#32;QSC_KPA_PARALLELISM&#32;8</emphasis>
800 
805 QSC_EXPORT_API&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
806 {
807 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_HAS_AVX512)</emphasis>
808 &#32;&#32;&#32;&#32;__m512i&#32;statew[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
809 <emphasis role="preprocessor">#elif&#32;defined(QSC_SYSTEM_HAS_AVX2)</emphasis>
810 &#32;&#32;&#32;&#32;__m256i&#32;statew[2][<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
811 <emphasis role="preprocessor">#endif</emphasis>
812 
813 &#32;&#32;&#32;&#32;uint64_t&#32;<link linkend="_structqsc__kpa__state_1a15d65aef29d1eef4b4ecc31331a44b1f">state</link>[<link linkend="_sha3_8h_1aff23e68acf93ef5b90d988d0ec6c5459">QSC_KPA_PARALLELISM</link>][<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>];&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
814 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_structqsc__kpa__state_1a962dc51c0a50636ac1cdff958f04b482">buffer</link>[<link linkend="_sha3_8h_1aff23e68acf93ef5b90d988d0ec6c5459">QSC_KPA_PARALLELISM</link>&#32;*&#32;<link linkend="_sha3_8h_1a66f9f02e5abf8ad658e7a231444c4ee5">QSC_KECCAK_STATE_BYTE_SIZE</link>];&#32;&#32;&#32;
815 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_structqsc__kpa__state_1a7a04afe5347934be732ec70a70bd0a28">position</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
816 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_structqsc__kpa__state_1a4f5e2a77c03d6867d49cf047173e7f2e">processed</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
817 &#32;&#32;&#32;&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;<link linkend="_structqsc__kpa__state_1ac9a3da9c6d703bf06f29151437eeede9">rate</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
818 }&#32;<link linkend="_structqsc__kpa__state">qsc_kpa_state</link>;
819 
831 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1af0442da464aa13390bfa5102a55f955b">qsc_kpa_finalize</link>(<link linkend="_structqsc__kpa__state">qsc_kpa_state</link>*&#32;ctx,&#32;uint8_t*&#32;output,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen);
832 
844 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aaed3655e3ebcb5f36cc9a361a76be220">qsc_kpa_initialize</link>(<link linkend="_structqsc__kpa__state">qsc_kpa_state</link>*&#32;ctx,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;custom,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;custlen);
845 
856 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a6861b34e992924d310fc33b527e615bb">qsc_kpa_update</link>(<link linkend="_structqsc__kpa__state">qsc_kpa_state</link>*&#32;ctx,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;message,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
857 
866 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a38e6430f30392e3190ea06eeee9fa707">qsc_kpa_dispose</link>(<link linkend="_structqsc__kpa__state">qsc_kpa_state</link>*&#32;ctx);
867 
868 <emphasis role="comment">/*&#32;parallel&#32;Keccak&#32;x4&#32;*/</emphasis>
869 
870 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_HAS_AVX2)</emphasis>
871 
887 <emphasis role="keywordtype">void</emphasis>&#32;qsc_keccakx4_absorb(__m256i&#32;state[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>],&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,
888 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen,&#32;uint8_t&#32;domain);
889 
906 <emphasis role="keywordtype">void</emphasis>&#32;qsc_keccakx4_absorb_aligned(__m256i&#32;state[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>],&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,
907 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen,&#32;uint8_t&#32;domain);
908 
923 <emphasis role="keywordtype">void</emphasis>&#32;qsc_keccakx4_squeezeblocks(__m256i&#32;state[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>],&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,
924 &#32;&#32;&#32;&#32;uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;nblocks);
925 
926 <emphasis role="preprocessor">#endif</emphasis>
927 
928 <emphasis role="comment">/*&#32;parallel&#32;Keccak&#32;x8&#32;*/</emphasis>
929 
930 <emphasis role="preprocessor">#if&#32;defined(QSC_SYSTEM_HAS_AVX512)</emphasis>
931 
951 <emphasis role="keywordtype">void</emphasis>&#32;qsc_keccakx8_absorb(__m512i&#32;state[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>],&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,
952 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,
953 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen,&#32;uint8_t&#32;domain);
954 
975 <emphasis role="keywordtype">void</emphasis>&#32;qsc_keccakx8_absorb_aligned(__m512i&#32;state[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>],&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,
976 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,
977 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen,&#32;uint8_t&#32;domain);
978 
993 <emphasis role="keywordtype">void</emphasis>&#32;qsc_keccakx8_squeezeblocks(__m512i&#32;state[<link linkend="_sha3_8h_1a4a5209edb9ecb070655b876af085b66c">QSC_KECCAK_STATE_SIZE</link>],&#32;<link linkend="_sha3_8h_1a3283a3326659d4e2e0679c6bd32b6cc6">qsc_keccak_rate</link>&#32;rate,
994 &#32;&#32;&#32;&#32;uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;uint8_t*&#32;out4,
995 &#32;&#32;&#32;&#32;uint8_t*&#32;out5,&#32;uint8_t*&#32;out6,&#32;uint8_t*&#32;out7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;nblocks);
996 
997 <emphasis role="preprocessor">#endif</emphasis>
998 
999 <emphasis role="comment">/*&#32;parallel&#32;SHAKE&#32;x4&#32;*/</emphasis>
1000 
1018 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a463021774cd48b812691642122b419b6">qsc_shake_128x4</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1019 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen);
1020 
1038 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a1e7e526bc8ff821a91648a7e5b89315a">qsc_shake_256x4</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1039 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen);
1040 
1058 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1af84aff27589c4ba3df21282928f5827e">qsc_shake_512x4</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1059 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen);
1060 
1061 <emphasis role="comment">/*&#32;parallel&#32;shake&#32;x8&#32;*/</emphasis>
1062 
1088 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ad0b13160d562fd32b6a143e8f8a32e1d">qsc_shake_128x8</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,
1089 &#32;&#32;&#32;&#32;uint8_t*&#32;out4,&#32;uint8_t*&#32;out5,&#32;uint8_t*&#32;out6,&#32;uint8_t*&#32;out7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1090 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,
1091 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen);
1092 
1118 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a5afc7f12bde103c07e1d5ed53dd5613a">qsc_shake_256x8</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,
1119 &#32;&#32;&#32;&#32;uint8_t*&#32;out4,&#32;uint8_t*&#32;out5,&#32;uint8_t*&#32;out6,&#32;uint8_t*&#32;out7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1120 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,
1121 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen);
1122 
1148 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1abe60f27ad2582a11f03c1b64817ce6d7">qsc_shake_512x8</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,
1149 &#32;&#32;&#32;&#32;uint8_t*&#32;out4,&#32;uint8_t*&#32;out5,&#32;uint8_t*&#32;out6,&#32;uint8_t*&#32;out7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1150 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp3,
1151 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;inp7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;inplen);
1152 
1153 <emphasis role="comment">/*&#32;parallel&#32;kmac&#32;x4&#32;*/</emphasis>
1154 
1182 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a541212d3f21183b011d6f8c0e3861881">qsc_kmac_128x4</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1183 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,
1184 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;cstlen,
1185 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
1186 
1214 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1adee310d60c00466918adf6182865d3a8">qsc_kmac_256x4</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1215 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,
1216 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;cstlen,
1217 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
1218 
1246 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1aad60004f4f41b4b06085041e1713d400">qsc_kmac_512x4</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1247 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,
1248 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;cstlen,
1249 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg3,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
1250 
1251 <emphasis role="comment">/*&#32;parallel&#32;KMAC&#32;x8&#32;*/</emphasis>
1252 
1296 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a95df26492099e6157da0035e9a5c8ff8">qsc_kmac_128x8</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,
1297 &#32;&#32;&#32;&#32;uint8_t*&#32;out4,&#32;uint8_t*&#32;out5,&#32;uint8_t*&#32;out6,&#32;uint8_t*&#32;out7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1298 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key3,
1299 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,
1300 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst3,
1301 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;cstlen,
1302 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg3,
1303 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
1304 
1348 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1ac64e3f14a58f4da0122096d60bd4f401">qsc_kmac_256x8</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,
1349 &#32;&#32;&#32;&#32;uint8_t*&#32;out4,&#32;uint8_t*&#32;out5,&#32;uint8_t*&#32;out6,&#32;uint8_t*&#32;out7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1350 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key3,
1351 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,
1352 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst3,
1353 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;cstlen,
1354 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg3,
1355 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
1356 
1400 QSC_EXPORT_API&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_sha3_8h_1a7bcf8e653d758d204dda7c8648bd0b8f">qsc_kmac_512x8</link>(uint8_t*&#32;out0,&#32;uint8_t*&#32;out1,&#32;uint8_t*&#32;out2,&#32;uint8_t*&#32;out3,
1401 &#32;&#32;&#32;&#32;uint8_t*&#32;out4,&#32;uint8_t*&#32;out5,&#32;uint8_t*&#32;out6,&#32;uint8_t*&#32;out7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;outlen,
1402 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key3,
1403 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;key7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;keylen,
1404 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst3,
1405 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;cst7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;cstlen,
1406 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg0,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg1,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg2,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg3,
1407 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg4,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg5,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg6,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t*&#32;msg7,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;msglen);
1408 
1409 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
