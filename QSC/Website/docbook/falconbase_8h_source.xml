<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_falconbase_8h_source" xml:lang="en-US">
<title>falconbase.h</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/falconbase.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;2025&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation</emphasis>
2 <emphasis role="comment">&#32;*&#32;All&#32;Rights&#32;Reserved.</emphasis>
3 <emphasis role="comment">&#32;*</emphasis>
4 <emphasis role="comment">&#32;*&#32;NOTICE:&#32;This&#32;software&#32;and&#32;all&#32;accompanying&#32;materials&#32;are&#32;the&#32;exclusive&#32;</emphasis>
5 <emphasis role="comment">&#32;*&#32;property&#32;of&#32;Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;Corporation&#32;(QRCS).</emphasis>
6 <emphasis role="comment">&#32;*&#32;The&#32;intellectual&#32;and&#32;technical&#32;concepts&#32;contained&#32;within&#32;this&#32;implementation&#32;</emphasis>
7 <emphasis role="comment">&#32;*&#32;are&#32;proprietary&#32;to&#32;QRCS&#32;and&#32;its&#32;authorized&#32;licensors&#32;and&#32;are&#32;protected&#32;under&#32;</emphasis>
8 <emphasis role="comment">&#32;*&#32;applicable&#32;U.S.&#32;and&#32;international&#32;copyright,&#32;patent,&#32;and&#32;trade&#32;secret&#32;laws.</emphasis>
9 <emphasis role="comment">&#32;*</emphasis>
10 <emphasis role="comment">&#32;*&#32;CRYPTOGRAPHIC&#32;STANDARDS:</emphasis>
11 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;includes&#32;implementations&#32;of&#32;cryptographic&#32;algorithms&#32;such&#32;as&#32;</emphasis>
12 <emphasis role="comment">&#32;*&#32;&#32;&#32;SHA3,&#32;AES,&#32;and&#32;others.&#32;These&#32;algorithms&#32;are&#32;public&#32;domain&#32;or&#32;standardized&#32;</emphasis>
13 <emphasis role="comment">&#32;*&#32;&#32;&#32;by&#32;organizations&#32;such&#32;as&#32;NIST&#32;and&#32;are&#32;NOT&#32;the&#32;property&#32;of&#32;QRCS.</emphasis>
14 <emphasis role="comment">&#32;*&#32;-&#32;However,&#32;all&#32;source&#32;code,&#32;optimizations,&#32;and&#32;implementations&#32;in&#32;this&#32;library&#32;</emphasis>
15 <emphasis role="comment">&#32;*&#32;&#32;&#32;are&#32;original&#32;works&#32;of&#32;QRCS&#32;and&#32;are&#32;protected&#32;under&#32;this&#32;license.</emphasis>
16 <emphasis role="comment">&#32;*</emphasis>
17 <emphasis role="comment">&#32;*&#32;RESTRICTIONS:</emphasis>
18 <emphasis role="comment">&#32;*&#32;-&#32;Redistribution,&#32;modification,&#32;or&#32;unauthorized&#32;distribution&#32;of&#32;this&#32;software,&#32;</emphasis>
19 <emphasis role="comment">&#32;*&#32;&#32;&#32;in&#32;whole&#32;or&#32;in&#32;part,&#32;is&#32;strictly&#32;prohibited.</emphasis>
20 <emphasis role="comment">&#32;*&#32;-&#32;This&#32;software&#32;is&#32;provided&#32;for&#32;non-commercial,&#32;educational,&#32;and&#32;research&#32;</emphasis>
21 <emphasis role="comment">&#32;*&#32;&#32;&#32;purposes&#32;only.&#32;Commercial&#32;use&#32;in&#32;any&#32;form&#32;is&#32;expressly&#32;forbidden.</emphasis>
22 <emphasis role="comment">&#32;*&#32;-&#32;Licensing&#32;and&#32;authorized&#32;distribution&#32;are&#32;solely&#32;at&#32;the&#32;discretion&#32;of&#32;QRCS.</emphasis>
23 <emphasis role="comment">&#32;*&#32;-&#32;Any&#32;use&#32;of&#32;this&#32;software&#32;implies&#32;acceptance&#32;of&#32;these&#32;restrictions.</emphasis>
24 <emphasis role="comment">&#32;*</emphasis>
25 <emphasis role="comment">&#32;*&#32;DISCLAIMER:</emphasis>
26 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;provided&#32;&quot;as&#32;is,&quot;&#32;without&#32;warranty&#32;of&#32;any&#32;kind,&#32;express&#32;or&#32;</emphasis>
27 <emphasis role="comment">&#32;*&#32;implied,&#32;including&#32;but&#32;not&#32;limited&#32;to&#32;warranties&#32;of&#32;merchantability&#32;or&#32;fitness&#32;</emphasis>
28 <emphasis role="comment">&#32;*&#32;for&#32;a&#32;particular&#32;purpose.&#32;QRCS&#32;disclaims&#32;all&#32;liability&#32;for&#32;any&#32;direct,&#32;indirect,&#32;</emphasis>
29 <emphasis role="comment">&#32;*&#32;incidental,&#32;or&#32;consequential&#32;damages&#32;resulting&#32;from&#32;the&#32;use&#32;or&#32;misuse&#32;of&#32;this&#32;software.</emphasis>
30 <emphasis role="comment">&#32;*</emphasis>
31 <emphasis role="comment">&#32;*&#32;FULL&#32;LICENSE:</emphasis>
32 <emphasis role="comment">&#32;*&#32;This&#32;software&#32;is&#32;subject&#32;to&#32;the&#32;**Quantum&#32;Resistant&#32;Cryptographic&#32;Solutions&#32;</emphasis>
33 <emphasis role="comment">&#32;*&#32;Proprietary&#32;License&#32;(QRCS-PL)**.&#32;The&#32;complete&#32;license&#32;terms&#32;are&#32;included&#32;</emphasis>
34 <emphasis role="comment">&#32;*&#32;in&#32;the&#32;LICENSE.txt&#32;file&#32;distributed&#32;with&#32;this&#32;software.</emphasis>
35 <emphasis role="comment">&#32;*</emphasis>
36 <emphasis role="comment">&#32;*&#32;Written&#32;by:&#32;John&#32;G.&#32;Underhill</emphasis>
37 <emphasis role="comment">&#32;*&#32;Contact:&#32;john.underhill@protonmail.com</emphasis>
38 <emphasis role="comment">&#32;*/</emphasis>
39 
40 
41 <emphasis role="preprocessor">#ifndef&#32;QSC_FALCONBASE_H</emphasis>
42 <emphasis role="preprocessor">#define&#32;QSC_FALCONBASE_H</emphasis>
43 
44 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">common.h</link>&quot;</emphasis>
45 
46 <emphasis role="comment">/*&#32;\cond&#32;DOXYGEN_IGNORE&#32;*/</emphasis>
47 
48 <emphasis role="comment">/*&#32;api.h&#32;*/</emphasis>
49 
50 <emphasis role="preprocessor">#if&#32;defined(QSC_FALCON_S3SHAKE256F512)</emphasis>
51 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;FALCON_CRYPTO_SECRETKEYBYTES&#32;1281</emphasis>
52 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;FALCON_CRYPTO_PUBLICKEY_BYTES&#32;897</emphasis>
53 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;FALCON_CRYPTO_SIGNATURE_BYTES&#32;690</emphasis>
54 <emphasis role="preprocessor">#elif&#32;defined(QSC_FALCON_S5SHAKE256F1024)</emphasis>
55 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;FALCON_CRYPTO_SECRETKEYBYTES&#32;2305</emphasis>
56 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;FALCON_CRYPTO_PUBLICKEY_BYTES&#32;1793</emphasis>
57 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;FALCON_CRYPTO_SIGNATURE_BYTES&#32;1330</emphasis>
58 <emphasis role="preprocessor">#endif</emphasis>
59 
60 <emphasis role="comment">/*&#32;fpr.h&#32;*/</emphasis>
61 
62 <emphasis role="preprocessor">#define&#32;FALCON_FPR_GM_TAB_SIZE&#32;2048</emphasis>
63 <emphasis role="preprocessor">#define&#32;FALCON_FPR_INV_SIGMA_SIZE&#32;11</emphasis>
64 <emphasis role="preprocessor">#define&#32;FALCON_FPR_GM_P2_SIZE&#32;11</emphasis>
65 <emphasis role="preprocessor">#define&#32;FALCON_Q&#32;12289</emphasis>
66 <emphasis role="preprocessor">#define&#32;FALCON_Q0I&#32;12287</emphasis>
67 <emphasis role="preprocessor">#define&#32;FALCON_R&#32;4091</emphasis>
68 <emphasis role="preprocessor">#define&#32;FALCON_R2&#32;10952</emphasis>
69 <emphasis role="preprocessor">#define&#32;FALCON_GMB_SIZE&#32;1024</emphasis>
70 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_1&#32;136</emphasis>
71 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_2&#32;272</emphasis>
72 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_3&#32;224</emphasis>
73 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_4&#32;448</emphasis>
74 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_5&#32;896</emphasis>
75 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_6&#32;1792</emphasis>
76 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_7&#32;3584</emphasis>
77 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_8&#32;7168</emphasis>
78 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_9&#32;14336</emphasis>
79 <emphasis role="preprocessor">#define&#32;FALCON_KEYGEN_TEMP_10&#32;28672</emphasis>
80 <emphasis role="preprocessor">#define&#32;FALCON_SMALL_PRIME_SIZE&#32;522</emphasis>
81 <emphasis role="preprocessor">#define&#32;FALCON_GAUS_1024_12289_SIZE&#32;27</emphasis>
82 <emphasis role="preprocessor">#define&#32;FALCON_MAX_BL_SMALL_SIZE&#32;11</emphasis>
83 <emphasis role="preprocessor">#define&#32;FALCON_MAX_BL_LARGE_SIZE&#32;10</emphasis>
84 <emphasis role="preprocessor">#define&#32;FALCON_DEPTH_INT_FG&#32;4</emphasis>
85 <emphasis role="preprocessor">#define&#32;FALCON_NONCE_SIZE&#32;40</emphasis>
86 <emphasis role="preprocessor">#define&#32;FALCON_L2BOUND_SIZE&#32;11</emphasis>
87 <emphasis role="preprocessor">#define&#32;FALCON_MAXBITS_SIZE&#32;11</emphasis>
88 <emphasis role="preprocessor">#define&#32;FALCON_REV10_SIZE&#32;1024</emphasis>
89 
90 <emphasis role="comment">/*&#32;prng.c&#32;*/</emphasis>
91 
92 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
93 {
94 &#32;&#32;&#32;&#32;QSC_ALIGN(8)&#32;uint8_t&#32;buf[512];
95 &#32;&#32;&#32;&#32;QSC_ALIGN(8)&#32;uint8_t&#32;state[256];
96 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;ptr;
97 &#32;&#32;&#32;&#32;int32_t&#32;type;
98 }&#32;falcon_prng_state;
99 
100 <emphasis role="comment">/*&#32;fpr.c&#32;*/</emphasis>
101 
102 typedef&#32;uint64_t&#32;falcon_fpr;
103 
104 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_q&#32;=&#32;4667981563525332992;
105 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_inverse_of_q&#32;=&#32;4545632735260551042;
106 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_inv_2sqrsigma0&#32;=&#32;4594603506513722306;
107 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_log2&#32;=&#32;4604418534313441775;
108 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_inv_log2&#32;=&#32;4609176140021203710;
109 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_bnorm_max&#32;=&#32;4670353323383631276;
110 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_zero&#32;=&#32;0;
111 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_one&#32;=&#32;4607182418800017408;
112 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_two&#32;=&#32;4611686018427387904;
113 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_onehalf&#32;=&#32;4602678819172646912;
114 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_invsqrt2&#32;=&#32;4604544271217802189;
115 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_invsqrt8&#32;=&#32;4600040671590431693;
116 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_ptwo31&#32;=&#32;4746794007248502784;
117 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_ptwo31m1&#32;=&#32;4746794007244308480;
118 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_mtwo31m1&#32;=&#32;13970166044099084288U;
119 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_ptwo63m1&#32;=&#32;4890909195324358656;
120 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_mtwo63m1&#32;=&#32;14114281232179134464U;
121 static&#32;const&#32;falcon_fpr&#32;falcon_fpr_ptwo63&#32;=&#32;4890909195324358656;
122 
123 typedef&#32;struct
124 {
125 &#32;&#32;&#32;&#32;uint32_t&#32;p;
126 &#32;&#32;&#32;&#32;uint32_t&#32;g;
127 &#32;&#32;&#32;&#32;uint32_t&#32;s;
128 }&#32;falcon_small_prime;
129 
130 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;falcon_fpr&#32;falcon_fpr_inv_sigma[FALCON_FPR_INV_SIGMA_SIZE];
131 
132 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;falcon_fpr&#32;falcon_fpr_sigma_min[FALCON_FPR_INV_SIGMA_SIZE];
133 
134 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;falcon_fpr&#32;falcon_fpr_gm_tab[FALCON_FPR_GM_TAB_SIZE];
135 
136 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;falcon_fpr&#32;falcon_fpr_p2_tab[FALCON_FPR_GM_P2_SIZE];
137 
138 <emphasis role="comment">/*&#32;codec.c&#32;*/</emphasis>
139 
140 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;falcon_max_fg_bits[FALCON_MAXBITS_SIZE];
141 
142 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;falcon_max_FG_bits[FALCON_MAXBITS_SIZE];
143 
144 <emphasis role="comment">/*&#32;verify.c&#32;*/</emphasis>
145 
146 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;falcon_GMb[FALCON_GMB_SIZE];
147 
148 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;falcon_iGMb[FALCON_GMB_SIZE];
149 
150 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;falcon_small_prime&#32;falcon_small_primes[FALCON_SMALL_PRIME_SIZE];
151 
152 <emphasis role="comment">/*&#32;keygen.c&#32;*/</emphasis>
153 
154 <emphasis role="comment">/*</emphasis>
155 <emphasis role="comment">&#32;*&#32;Table&#32;below&#32;incarnates&#32;a&#32;discrete&#32;Gaussian&#32;distribution:</emphasis>
156 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;D(x)&#32;=&#32;exp(-(x^2)/(2*sigma^2))</emphasis>
157 <emphasis role="comment">&#32;*&#32;where&#32;sigma&#32;=&#32;1.17*sqrt(q/(2*N)),&#32;q&#32;=&#32;12289,&#32;and&#32;N&#32;=&#32;1024.</emphasis>
158 <emphasis role="comment">&#32;*&#32;Element&#32;0&#32;of&#32;the&#32;table&#32;is&#32;P(x&#32;=&#32;0).</emphasis>
159 <emphasis role="comment">&#32;*&#32;For&#32;k&#32;&gt;&#32;0,&#32;element&#32;k&#32;is&#32;P(x&#32;&gt;=&#32;k+1&#32;|&#32;x&#32;&gt;&#32;0).</emphasis>
160 <emphasis role="comment">&#32;*&#32;Probabilities&#32;are&#32;scaled&#32;up&#32;by&#32;2^63.</emphasis>
161 <emphasis role="comment">&#32;*/</emphasis>
162 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint64_t&#32;falcon_gauss_1024_12289[FALCON_GAUS_1024_12289_SIZE];
163 
164 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;falcon_rev10[FALCON_REV10_SIZE];
165 
166 <emphasis role="comment">/*</emphasis>
167 <emphasis role="comment">&#32;*&#32;The&#32;falcon_max_bl_small[]&#32;and&#32;falcon_max_bl_large[]&#32;contain&#32;the&#32;lengths,&#32;in&#32;31-bit</emphasis>
168 <emphasis role="comment">&#32;*&#32;words,&#32;of&#32;intermediate&#32;values&#32;in&#32;the&#32;computation:</emphasis>
169 <emphasis role="comment">&#32;*</emphasis>
170 <emphasis role="comment">&#32;*&#32;&#32;&#32;falcon_max_bl_small[depth]:&#32;length&#32;for&#32;the&#32;input&#32;f&#32;and&#32;g&#32;at&#32;that&#32;depth</emphasis>
171 <emphasis role="comment">&#32;*&#32;&#32;&#32;falcon_max_bl_large[depth]:&#32;length&#32;for&#32;the&#32;unreduced&#32;F&#32;and&#32;G&#32;at&#32;that&#32;depth</emphasis>
172 <emphasis role="comment">&#32;*</emphasis>
173 <emphasis role="comment">&#32;*&#32;Rules:</emphasis>
174 <emphasis role="comment">&#32;*</emphasis>
175 <emphasis role="comment">&#32;*&#32;&#32;-&#32;Within&#32;an&#32;array,&#32;values&#32;grow.</emphasis>
176 <emphasis role="comment">&#32;*</emphasis>
177 <emphasis role="comment">&#32;*&#32;&#32;-&#32;The&#32;&apos;SMALL&apos;&#32;array&#32;must&#32;have&#32;an&#32;entry&#32;for&#32;maximum&#32;depth,&#32;corresponding</emphasis>
178 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;to&#32;the&#32;size&#32;of&#32;values&#32;used&#32;in&#32;the&#32;binary&#32;GCD.&#32;There&#32;is&#32;no&#32;such&#32;value</emphasis>
179 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;for&#32;the&#32;&apos;LARGE&apos;&#32;array&#32;(the&#32;binary&#32;GCD&#32;yields&#32;already&#32;reduced</emphasis>
180 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;coefficients).</emphasis>
181 <emphasis role="comment">&#32;*</emphasis>
182 <emphasis role="comment">&#32;*&#32;&#32;-&#32;falcon_max_bl_large[depth]&#32;&gt;=&#32;falcon_max_bl_small[depth&#32;+&#32;1].</emphasis>
183 <emphasis role="comment">&#32;*</emphasis>
184 <emphasis role="comment">&#32;*&#32;&#32;-&#32;Values&#32;must&#32;be&#32;large&#32;enough&#32;to&#32;handle&#32;the&#32;common&#32;cases,&#32;with&#32;some</emphasis>
185 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;margins.</emphasis>
186 <emphasis role="comment">&#32;*</emphasis>
187 <emphasis role="comment">&#32;*&#32;&#32;-&#32;Values&#32;must&#32;not&#32;be&#32;&quot;too&#32;large&quot;&#32;either&#32;because&#32;we&#32;will&#32;convert&#32;some</emphasis>
188 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;integers&#32;into&#32;floating-point&#32;values&#32;by&#32;considering&#32;the&#32;top&#32;10&#32;words,</emphasis>
189 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;i.e.&#32;310&#32;bits;&#32;hence,&#32;for&#32;values&#32;of&#32;length&#32;more&#32;than&#32;10&#32;words,&#32;we</emphasis>
190 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;should&#32;take&#32;care&#32;to&#32;have&#32;the&#32;length&#32;centered&#32;on&#32;the&#32;expected&#32;size.</emphasis>
191 <emphasis role="comment">&#32;*</emphasis>
192 <emphasis role="comment">&#32;*&#32;The&#32;following&#32;average&#32;lengths,&#32;in&#32;bits,&#32;have&#32;been&#32;measured&#32;on&#32;thousands</emphasis>
193 <emphasis role="comment">&#32;*&#32;of&#32;random&#32;keys&#32;(fg&#32;=&#32;max&#32;length&#32;of&#32;the&#32;absolute&#32;value&#32;of&#32;coefficients</emphasis>
194 <emphasis role="comment">&#32;*&#32;of&#32;f&#32;and&#32;g&#32;at&#32;that&#32;depth;&#32;FG&#32;=&#32;idem&#32;for&#32;the&#32;unreduced&#32;F&#32;and&#32;G;&#32;for&#32;the</emphasis>
195 <emphasis role="comment">&#32;*&#32;maximum&#32;depth,&#32;F&#32;and&#32;G&#32;are&#32;the&#32;output&#32;of&#32;binary&#32;GCD,&#32;multiplied&#32;by&#32;q;</emphasis>
196 <emphasis role="comment">&#32;*&#32;for&#32;each&#32;value,&#32;the&#32;average&#32;and&#32;standard&#32;deviation&#32;are&#32;provided).</emphasis>
197 <emphasis role="comment">&#32;*</emphasis>
198 <emphasis role="comment">&#32;*&#32;Binary&#32;case:</emphasis>
199 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;10&#32;&#32;&#32;&#32;fg:&#32;6307.52&#32;(24.48)&#32;&#32;&#32;&#32;FG:&#32;6319.66&#32;(24.51)</emphasis>
200 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;9&#32;&#32;&#32;&#32;fg:&#32;3138.35&#32;(12.25)&#32;&#32;&#32;&#32;FG:&#32;9403.29&#32;(27.55)</emphasis>
201 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;8&#32;&#32;&#32;&#32;fg:&#32;1576.87&#32;(&#32;7.49)&#32;&#32;&#32;&#32;FG:&#32;4703.30&#32;(14.77)</emphasis>
202 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;7&#32;&#32;&#32;&#32;fg:&#32;&#32;794.17&#32;(&#32;4.98)&#32;&#32;&#32;&#32;FG:&#32;2361.84&#32;(&#32;9.31)</emphasis>
203 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;6&#32;&#32;&#32;&#32;fg:&#32;&#32;400.67&#32;(&#32;3.10)&#32;&#32;&#32;&#32;FG:&#32;1188.68&#32;(&#32;6.04)</emphasis>
204 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;5&#32;&#32;&#32;&#32;fg:&#32;&#32;202.22&#32;(&#32;1.87)&#32;&#32;&#32;&#32;FG:&#32;&#32;599.81&#32;(&#32;3.87)</emphasis>
205 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;4&#32;&#32;&#32;&#32;fg:&#32;&#32;101.62&#32;(&#32;1.02)&#32;&#32;&#32;&#32;FG:&#32;&#32;303.49&#32;(&#32;2.38)</emphasis>
206 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;3&#32;&#32;&#32;&#32;fg:&#32;&#32;&#32;50.37&#32;(&#32;0.53)&#32;&#32;&#32;&#32;FG:&#32;&#32;153.65&#32;(&#32;1.39)</emphasis>
207 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;2&#32;&#32;&#32;&#32;fg:&#32;&#32;&#32;24.07&#32;(&#32;0.25)&#32;&#32;&#32;&#32;FG:&#32;&#32;&#32;78.20&#32;(&#32;0.73)</emphasis>
208 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;1&#32;&#32;&#32;&#32;fg:&#32;&#32;&#32;10.99&#32;(&#32;0.08)&#32;&#32;&#32;&#32;FG:&#32;&#32;&#32;39.82&#32;(&#32;0.41)</emphasis>
209 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;depth:&#32;&#32;0&#32;&#32;&#32;&#32;fg:&#32;&#32;&#32;&#32;4.00&#32;(&#32;0.00)&#32;&#32;&#32;&#32;FG:&#32;&#32;&#32;19.61&#32;(&#32;0.49)</emphasis>
210 <emphasis role="comment">&#32;*</emphasis>
211 <emphasis role="comment">&#32;*&#32;Integers&#32;are&#32;actually&#32;represented&#32;either&#32;in&#32;binary&#32;notation&#32;over</emphasis>
212 <emphasis role="comment">&#32;*&#32;31-bit&#32;words&#32;(signed,&#32;using&#32;two&apos;s&#32;complement),&#32;or&#32;in&#32;RNS,&#32;modulo</emphasis>
213 <emphasis role="comment">&#32;*&#32;many&#32;small&#32;primes.&#32;These&#32;small&#32;primes&#32;are&#32;close&#32;to,&#32;but&#32;slightly</emphasis>
214 <emphasis role="comment">&#32;*&#32;lower&#32;than,&#32;2^31.&#32;Use&#32;of&#32;RNS&#32;loses&#32;less&#32;than&#32;two&#32;bits,&#32;even&#32;for</emphasis>
215 <emphasis role="comment">&#32;*&#32;the&#32;largest&#32;values.</emphasis>
216 <emphasis role="comment">&#32;*</emphasis>
217 <emphasis role="comment">&#32;*&#32;IMPORTANT:&#32;if&#32;these&#32;values&#32;are&#32;modified,&#32;then&#32;the&#32;temporary&#32;buffer</emphasis>
218 <emphasis role="comment">&#32;*&#32;sizes&#32;(FALCON_KEYGEN_TEMP_*,&#32;in&#32;inner.h)&#32;must&#32;be&#32;recomputed</emphasis>
219 <emphasis role="comment">&#32;*&#32;accordingly.</emphasis>
220 <emphasis role="comment">&#32;*/</emphasis>
221 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;falcon_max_bl_small[FALCON_MAX_BL_SMALL_SIZE];
222 
223 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;falcon_max_bl_large[FALCON_MAX_BL_LARGE_SIZE];
224 
225 <emphasis role="comment">/*</emphasis>
226 <emphasis role="comment">&#32;*&#32;Average&#32;and&#32;standard&#32;deviation&#32;for&#32;the&#32;maximum&#32;size&#32;(in&#32;bits)&#32;of</emphasis>
227 <emphasis role="comment">&#32;*&#32;coefficients&#32;of&#32;(f,g),&#32;depending&#32;on&#32;depth.&#32;These&#32;values&#32;are&#32;used</emphasis>
228 <emphasis role="comment">&#32;*&#32;to&#32;compute&#32;bounds&#32;for&#32;Babai&apos;s&#32;reduction.</emphasis>
229 <emphasis role="comment">&#32;*/</emphasis>
230 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
231 {
232 &#32;&#32;&#32;&#32;int32_t&#32;avg;
233 &#32;&#32;&#32;&#32;int32_t&#32;std;
234 }&#32;falcon_bit_length[]&#32;=
235 {
236 &#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;4,&#32;&#32;0&#32;},
237 &#32;&#32;&#32;&#32;{&#32;&#32;&#32;11,&#32;&#32;1&#32;},
238 &#32;&#32;&#32;&#32;{&#32;&#32;&#32;24,&#32;&#32;1&#32;},
239 &#32;&#32;&#32;&#32;{&#32;&#32;&#32;50,&#32;&#32;1&#32;},
240 &#32;&#32;&#32;&#32;{&#32;&#32;102,&#32;&#32;1&#32;},
241 &#32;&#32;&#32;&#32;{&#32;&#32;202,&#32;&#32;2&#32;},
242 &#32;&#32;&#32;&#32;{&#32;&#32;401,&#32;&#32;4&#32;},
243 &#32;&#32;&#32;&#32;{&#32;&#32;794,&#32;&#32;5&#32;},
244 &#32;&#32;&#32;&#32;{&#32;1577,&#32;&#32;8&#32;},
245 &#32;&#32;&#32;&#32;{&#32;3138,&#32;13&#32;},
246 &#32;&#32;&#32;&#32;{&#32;6308,&#32;25&#32;}
247 };
248 
249 <emphasis role="comment">/*&#32;sign.c&#32;*/</emphasis>
250 
251 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct</emphasis>
252 {
253 &#32;&#32;&#32;&#32;falcon_prng_state&#32;p;
254 &#32;&#32;&#32;&#32;falcon_fpr&#32;sigma_min;
255 }&#32;falcon_sampler_context;
256 
257 <emphasis role="keyword">typedef</emphasis>&#32;int32_t(*falcon_samplerZ)(<emphasis role="keywordtype">void</emphasis>*&#32;ctx,&#32;falcon_fpr&#32;mu,&#32;falcon_fpr&#32;sigma);
258 
259 <emphasis role="comment">/*&#32;common.c&#32;*/</emphasis>
260 
261 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;falcon_l2bound[FALCON_L2BOUND_SIZE];
262 
263 <emphasis role="comment">/*&#32;public&#32;functions&#32;*/</emphasis>
264 
273 int32_t&#32;qsc_falcon_ref_generate_keypair(uint8_t&#32;*pk,&#32;uint8_t&#32;*sk,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;(*rng_generate)(uint8_t*,&#32;<emphasis role="keywordtype">size_t</emphasis>));
274 
285 int32_t&#32;qsc_falcon_ref_sign(uint8_t&#32;*sm,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;*smlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*m,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;mlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*sk,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;(*rng_generate)(uint8_t*,&#32;<emphasis role="keywordtype">size_t</emphasis>));
286 
297 <emphasis role="keywordtype">bool</emphasis>&#32;qsc_falcon_ref_open(uint8_t&#32;*m,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;*mlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*sm,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;smlen,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*pk);
298 
299 <emphasis role="comment">/*&#32;\endcond&#32;DOXYGEN_IGNORE&#32;*/</emphasis>
300 
301 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
