<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_hcg_8h" xml:lang="en-US">
<title>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/hcg.h File Reference</title>
<indexterm><primary>C:/Users/stepp/Documents/Visual Studio 2022/Projects/C/QSC/QSC/hcg.h</primary></indexterm>
<para>

<para>Contains the public api and documentation for the HCG pseudo-random bytes generator. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;sha2.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structqsc__hcg__state">qsc_hcg_state</link></para>

<para>The HCG state structure. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_hcg_8h_1a1084f334864c13af94f7d980b9c28508"/>#define <emphasis role="strong">QSC_HCG_KEY_SIZE</emphasis>&#160;&#160;&#160;64</para>

<para>The HCG internal key size. </para>
</listitem>
            <listitem><para><anchor xml:id="_hcg_8h_1a3b4ca51cdcbe98e298364b3270af2d6b"/>#define <emphasis role="strong">QSC_HCG_INFO_SIZE</emphasis>&#160;&#160;&#160;19</para>

<para>The HCG default info size. </para>
</listitem>
            <listitem><para><anchor xml:id="_hcg_8h_1aff1460756f7a46e917e8e44eb1999fdb"/>#define <emphasis role="strong">QSC_HCG_MAX_INFO_SIZE</emphasis>&#160;&#160;&#160;56</para>

<para>The HCG maximum info size. </para>
</listitem>
            <listitem><para><anchor xml:id="_hcg_8h_1a15dcf6d6c44b55fba137e3105bbff7ee"/>#define <emphasis role="strong">QSC_HCG_NONCE_SIZE</emphasis>&#160;&#160;&#160;8</para>

<para>The HCG nonce size. </para>
</listitem>
            <listitem><para><anchor xml:id="_hcg_8h_1aa84389657008311972c71329d5e061fb"/>#define <emphasis role="strong">QSC_HCG_RESEED_THRESHHOLD</emphasis>&#160;&#160;&#160;65535</para>

<para>The HCG reseed threshold. </para>
</listitem>
            <listitem><para><anchor xml:id="_hcg_8h_1ac1e216ac648364ca13c7710a51a7fbcc"/>#define <emphasis role="strong">QSC_HCG_SEED_SIZE</emphasis>&#160;&#160;&#160;64</para>

<para>The HCG seed size. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>QSC_EXPORT_API void <link linkend="_hcg_8h_1ad02c87962d4302c598655a68e35e22e6">qsc_hcg_dispose</link> (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> *ctx)</para>

<para>Dispose of the HCG DRBG state. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_hcg_8h_1a28a2c1690583253e27b92d3152d063e8">qsc_hcg_initialize</link> (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> *ctx, const uint8_t *seed, size_t seedlen, const uint8_t *info, size_t infolen, bool pres)</para>

<para>Initialize the pseudo-random provider state with a seed and optional personalization string. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_hcg_8h_1a32e5a8c4e8174ad13bfddfe814256167">qsc_hcg_generate</link> (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> *ctx, uint8_t *output, size_t otplen)</para>

<para>Generate pseudo-random bytes using the random provider. </para>
</listitem>
            <listitem><para>QSC_EXPORT_API void <link linkend="_hcg_8h_1aaf80227f318e327545005d4f7feef935">qsc_hcg_update</link> (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> *ctx, const uint8_t *seed, size_t seedlen)</para>

<para>Update the random provider with new keying material. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Contains the public api and documentation for the HCG pseudo-random bytes generator. </para>

<para><formalpara><title>Author</title>

<para>John Underhill </para>
</formalpara>
<formalpara><title>Date</title>

<para>August 31, 2020 \update November 21, 2024 </para>
</formalpara>
<formalpara><title>Version</title>

<para>1.1</para>
</formalpara>
Usage Example <?linebreak?> Initialize the DRBG and generate output <?linebreak?><literallayout><computeroutput><emphasis role="comment">//&#32;external&#32;key&#32;and&#32;optional&#32;custom&#32;arrays</emphasis>
uint8_t&#32;seed[32]&#32;=&#32;{&#32;...&#32;};
uint8_t&#32;info[32]&#32;=&#32;{&#32;...&#32;};

<emphasis role="comment">//&#32;random&#32;bytes</emphasis>
uint8_t&#32;rnd[200]&#32;=&#32;{&#32;0&#32;};

<emphasis role="comment">//&#32;initialize&#32;with&#32;seed,&#32;and&#32;optional&#32;customization&#32;array,&#32;with&#32;predictive&#32;resistance&#32;enabled</emphasis>
qsc_hcg_initialize(seed,&#32;<emphasis role="keyword">sizeof</emphasis>(seed),&#32;info,&#32;<emphasis role="keyword">sizeof</emphasis>(info),&#32;<emphasis role="keyword">true</emphasis>);

<emphasis role="comment">//&#32;generate&#32;the&#32;pseudo-random</emphasis>
qsc_hcg_generate(rnd,&#32;<emphasis role="keyword">sizeof</emphasis>(rnd)));
</computeroutput></literallayout></para>

<para><formalpara><title>Remarks</title>

<para>\para HCG has a similar configuration to the HKDF Expand key derivation function, but with a 128-bit nonce, and a default info parameter. Setting the predictive resistance option to true during intialization changes HCG from a determinsitic to a non-determinstic generator. New seed material is generated at initialization and at the default 64 kilobyte output boundary, injecting new random seed material into the HMAC. The update function can be used to periodically update the HMAC key, by hashing the existing key and new seed material to create a new key. The dispose function must be called before an HCG instance is discarded.</para>
</formalpara>
The HKDF Scheme: Cryptographic Extraction and Key Derivation <link xlink:href="http://eprint.iacr.org/2010/264.pdf">http://eprint.iacr.org/2010/264.pdf</link> RFC 2104 HMAC: Keyed-Hashing for Message Authentication <link xlink:href="http://tools.ietf.org/html/rfc2104">http://tools.ietf.org/html/rfc2104</link> <?linebreak?>Fips 198-1: The Keyed-Hash Message Authentication Code (HMAC) <link xlink:href="http://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf">http://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf</link> <?linebreak?>Fips 180-4: Secure Hash Standard (SHS) <link xlink:href="http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf">http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf</link> </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_hcg_8h_1ad02c87962d4302c598655a68e35e22e6"/><section>
    <title>qsc_hcg_dispose()</title>
<indexterm><primary>qsc_hcg_dispose</primary><secondary>hcg.h</secondary></indexterm>
<indexterm><primary>hcg.h</primary><secondary>qsc_hcg_dispose</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_hcg_dispose (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> * ctx)</computeroutput></para><para>

<para>Dispose of the HCG DRBG state. </para>
</para>

<para><warning><title>Warning</title>

<para>The dispose function must be called when disposing of the cipher. This function destroys the internal state of the cipher.</para>
</warning>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ctx</entry><entry>
<para>[struct] The HCG state structure </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_hcg_8h_1a32e5a8c4e8174ad13bfddfe814256167"/><section>
    <title>qsc_hcg_generate()</title>
<indexterm><primary>qsc_hcg_generate</primary><secondary>hcg.h</secondary></indexterm>
<indexterm><primary>hcg.h</primary><secondary>qsc_hcg_generate</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_hcg_generate (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> * ctx, uint8_t * output, size_t otplen)</computeroutput></para><para>

<para>Generate pseudo-random bytes using the random provider. </para>
</para>

<para><warning><title>Warning</title>

<para>Initialize must first be called before this function can be used.</para>
</warning>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ctx</entry><entry>
<para>[struct] The HCG state structure </para>
</entry>
                            </row>
                            <row>
<entry>output</entry><entry>
<para>The pseudo-random output array </para>
</entry>
                            </row>
                            <row>
<entry>otplen</entry><entry>
<para>The requested number of bytes to generate </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_hcg_8h_1a28a2c1690583253e27b92d3152d063e8"/><section>
    <title>qsc_hcg_initialize()</title>
<indexterm><primary>qsc_hcg_initialize</primary><secondary>hcg.h</secondary></indexterm>
<indexterm><primary>hcg.h</primary><secondary>qsc_hcg_initialize</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_hcg_initialize (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> * ctx, const uint8_t * seed, size_t seedlen, const uint8_t * info, size_t infolen, bool pres)</computeroutput></para><para>

<para>Initialize the pseudo-random provider state with a seed and optional personalization string. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ctx</entry><entry>
<para>[struct] The hcg state structure </para>
</entry>
                            </row>
                            <row>
<entry>seed</entry><entry>
<para>[const] The random seed, 32 bytes of seed instantiates the 256-bit generator, 64 bytes the 512-bit generator </para>
</entry>
                            </row>
                            <row>
<entry>seedlen</entry><entry>
<para>The length of the input seed </para>
</entry>
                            </row>
                            <row>
<entry>info</entry><entry>
<para>[const] The optional personalization string </para>
</entry>
                            </row>
                            <row>
<entry>infolen</entry><entry>
<para>The length of the personalization string </para>
</entry>
                            </row>
                            <row>
<entry>pres</entry><entry>
<para>Enable periodic random injection; enables non deterministic pseudo-random generation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_hcg_8h_1aaf80227f318e327545005d4f7feef935"/><section>
    <title>qsc_hcg_update()</title>
<indexterm><primary>qsc_hcg_update</primary><secondary>hcg.h</secondary></indexterm>
<indexterm><primary>hcg.h</primary><secondary>qsc_hcg_update</secondary></indexterm>
<para><computeroutput>QSC_EXPORT_API void qsc_hcg_update (<link linkend="_structqsc__hcg__state">qsc_hcg_state</link> * ctx, const uint8_t * seed, size_t seedlen)</computeroutput></para><para>

<para>Update the random provider with new keying material. </para>
</para>

<para><warning><title>Warning</title>

<para>Initialize must first be called before this function can be used.</para>
</warning>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ctx</entry><entry>
<para>[struct] The HCG state structure </para>
</entry>
                            </row>
                            <row>
<entry>seed</entry><entry>
<para>[const] The random update seed </para>
</entry>
                            </row>
                            <row>
<entry>seedlen</entry><entry>
<para>The length of the update seed </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
